/* Generated By:JJTree: Do not edit this line. ASTStatementExpression.java */

/* SCCS  %W--- %G% -- %U% */

// Copyright: Copyright (c) 1997-2002 University of Southern California Brain Project.
// Copyright: This software may be freely copied provided the toplevel
// Copyright: COPYRIGHT file is included with each such copy.
// Copyright: Email nsl@java.usc.edu.

// Author: Salvador Marmol

public class ASTStatementExpression extends SimpleNode {

    String operator = null;

    public ASTStatementExpression(int id) {
        super(id);
    }

    public ASTStatementExpression(NslParser p, int id) {
        super(p, id);
    }

    /**
     * Accept the visitor.
     **/
    public Object jjtAccept(NslParserVisitor visitor, Object data) {
        return visitor.visit(this, data);
    }

    public String toJava(NslScope scope) {

        int childNum = jjtGetNumChildren();
        SimpleNode node = (SimpleNode) jjtGetChild(0);
        if (node instanceof ASTPrimaryExpression) {
            if (childNum > 1 && ((ASTPrimaryExpression) node).isNslExpression()) {
                // Simple Assignment statement nslVar.set(...)
                ASTAssignmentOperator operator = (ASTAssignmentOperator) jjtGetChild(1);
                operator.removeOperator();
                SimpleNode temp = (SimpleNode) jjtGetChild(childNum - 1);
                Token end = temp.getLastToken();
                end.image = end.image + ")";
            }
        }
        return "";
    }

    public void setOperator(String oper) {
        operator = oper;
    }

    public String getOperator() {
        return operator;
    }

    public String toXMLOpen(String prefix) {

        operator = ((operator == null) ? "" : " operator=\"" + operator + "\"");

        return prefix + "<" + toString() + operator + ">";
    }

}
