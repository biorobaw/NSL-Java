# SCCS @(#)makemake.unix	1.3 ___ 06/10/99 --- 17:51:37
# Note this makemake generates two Make files
# the first generate the java
# the second the class files
# The two files are necessary to that all of the java files are
# created before the first javac command is executed.
# javac needs to be able to find all of the java files at the
# time it compiles the first one --- it does its own make.

/bin/rm -f _make1.unix 
ls *.mod > _mod.lst
awk <_mod.lst '{print $1}' | awk -F. 'BEGIN{printf("all:");SS="";}
					       {printf("%s.java ",$1);
						SS=SS $1".java ";}
					       END{printf("\n\t@makedelzero.unix %s\n",SS);}' > _make1.unix
awk <_mod.lst '{print $1}' | awk -F. '{printf("%s.java: %s.mod\n\t@/bin/rm -f %s.nlx %s.java\n\tjava lx.src.NPPP -nocomments < %s.mod > %s.nlx\n\tjava npp.src.NPP -nocomments < %s.nlx > %s.java\n",$1,$1,$1,$1,$1,$1,$1,$1);}' >> _make1.unix
awk <_mod.lst '{print $1}' | awk -F. 'BEGIN{printf("clean:\n")}
					       {printf("\t@/bin/rm -f %s.java\n\t@/bin/rm -f %s.nlx\n",$1,$1);}' >> _make1.unix

/bin/rm -f _make2.unix 
awk <_mod.lst '{print $1}' | awk -F. 'BEGIN{printf("all:")}
                                               {printf("%s.class ",$1);}
                                               END{printf("\n");}' > _make2.unix
awk <_mod.lst '{print $1}' | awk -F. '{printf("%s.class: %s.java\n\tjavac  %s.java\n",$1,$1,$1);}' >> _make2.unix
awk <_mod.lst '{print $1}' | awk -F. 'BEGIN{printf("clean:\n")}
	   				       {printf("\t/bin/rm -f %s.class\n",$1);}' >> _make2.unix


/bin/rm -f _mod.lst


