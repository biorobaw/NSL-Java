
rm -f _make1.nt 
ls *.mod > _mod.lst
awk <_mod.lst '{print $1}' | awk -F. 'BEGIN{printf("all:");SS="";}
                                               {printf("%s.java ",$1);
                                                SS=SS $1".java ";}
                                               END{printf("\n\t@bash makedelzero.nt %s\n",SS);} ' > _make1.nt
awk <_mod.lst '{print $1}' | awk -F. '{printf("%s.java: %s.mod\n\t@rm -f %s.nlx %s.java\n\tjava lx.src.NPPP -nocomments < %s.mod > %s.nlx\n\tjava npp.src.NPP -nocomments < %s.nlx > %s.java\n",$1,$1,$1,$1,$1,$1,$1,$1);}' >> _make1.nt
awk <_mod.lst '{print $1}' | awk -F. '{printf("%s.mod: \n\t\n",$1);} ' >>_make1.nt
awk <_mod.lst '{print $1}' | awk -F. 'BEGIN{printf("clean:\n")}
                                               {printf("\t@rm -f %s.java\n\t@rm -f %s.nlx\n",$1,$1);}' >> _make1.nt

rm -f _make2.nt 
awk <_mod.lst '{print $1}' | awk -F. 'BEGIN{printf("all:")}
                                               {printf("%s.class ",$1);}
                                               END{printf("\n");}' > _make2.nt
awk <_mod.lst '{print $1}' | awk -F. '{printf("%s.class: %s.java\n\tjavac  %s.java\n",$1,$1,$1);}' >> _make2.nt
awk <_mod.lst '{print $1}' | awk -F. 'BEGIN{printf("clean:\n")}
                                               {printf("\t@rm -f %s.class\n",$1);}' >> _make2.nt

rm -f _mod.lst
