/* This file is generated by  NSL3.0 preprocessor*/

/* SCCS  %W%---%G%--%U% */
/* old kversion @(#)CDlatburst.mod	1.8 --- 08/05/99 -- 13:56:06 : jversion  @(#)CDlatburst.mod	1.2---04/23/99--18:39:19 */


// Import statements

 import nslj.src.system.*; 
 import nslj.src.cmd.*; 
 import nslj.src.lang.*; 
 import nslj.src.math.*; 
 import nslj.src.display.*; 

// Leaf nodes

//
// CDlatburst
//
/*
        Dopamine is modelled as an inhibitory effect on the indirect
        pathway projecting through GPe and STN and as an excitatory
        effect on the direct pathway projecting to GPi/SNr.
*/

/*
        Assume that the effect of dopamine on the projection neurons 
        in the caudate is to manipulate the time constant of the neurons.  
        More dopamine shortens the time constant of the neurons and 
        less dopamine increases the time constant.
*/


/**
 * CDlatburst class
 * Represents the Caudate Burst Cells Layer
 * @see     CDlatburst
 * @version 0.1 96/11/19
 * @author  Michael Crowley
 * @var private SNCdop_in - input coming from SNC module (of type NslDouble2)<p>
 * @var private FEFsac_in - input coming from FEF module (of type NslDouble2)<p>
 * @var private PFCfovea_in - input coming from PFC module (of type NslDouble2)<p>
 * @var private PFCgo_in - input coming from PFC module (of type NslDouble2)<p>
 * @var private CDlattan_in - input coming from CDlattan module (of type NslDouble2)<p>
 * @var private CDindlatburst_out - output going to GPElatburst module (of type NslDouble2)<p>
 * @var private CDdirlatburst_out - output going to SNRlatburst module (of type NslDouble2)<p>
 */

 public class CDlatburst extends NslModule/*(int CorticalArraySize)*/   {
// input ports
    public NslDinDouble2 FEFsac_in ; /*()  */
    public NslDinDouble2 SNCdop_in ; /*()  */
    public NslDinDouble2 PFCgo_in ; /*()   */
    public NslDinDouble2 PFCfovea_in ; /*()  */
    public NslDinDouble2 CDlattan_in ; /*()   */
// output ports
    public NslDoutDouble2 CDindlatburst_out ; /*(CorticalArraySize,CorticalArraySize)*/ 
    public NslDoutDouble2 CDdirlatburst_out ; /*(CorticalArraySize,CorticalArraySize) */

  // private variables
    private NslDouble2 cdindlatburst ; /* (CorticalArraySize,CorticalArraySize)*/
    private NslDouble2 cddirlatburst ; /* (CorticalArraySize,CorticalArraySize)*/


  private  double CorticalSlowDown;
  private  double basecdlatbursttm;
  private  double cdlatbursttm;
  private  double CDlatfefsacK;
  private  double CDlattanK;
  private  double CDlatsncK;
  private  double CDlatpfcK;
  private  double CDlatpfcgoK;
  private  double CDlbsigma1;
  private  double CDlbsigma2;
  private  double CDlbsigma3;
  private  double CDlbsigma4;


public  void initRun () {

    CDindlatburst_out.set(0);
    CDdirlatburst_out.set(0);

    CorticalSlowDown = 1.;
    basecdlatbursttm = 0.01;
    cdlatbursttm = basecdlatbursttm * CorticalSlowDown;
    CDlatfefsacK = 0.85;
    CDlattanK = 2;
    CDlatsncK = 1;
    CDlatpfcK = 0.25;
    CDlatpfcgoK = 0.25;
    CDlbsigma1 = 0;
    CDlbsigma2 = 60; // 90; //99/8/2 aa ???
    CDlbsigma3 = 0;
    CDlbsigma4 = 60;
  }
public  void simRun () {
    cdindlatburst.set(system.nsldiff.eval(cdindlatburst,cdlatbursttm,
 __nsltmp109=nslj.src.math.NslAdd.eval(__nsltmp109,
 __nsltmp107=nslj.src.math.NslSub.eval(__nsltmp107,
 __nsltmp105=nslj.src.math.NslSub.eval(__nsltmp105,
 __nsltmp103=nslj.src.math.NslAdd.eval(__nsltmp103,
 __nsltmp101=nslj.src.math.NslSub.eval(__nsltmp101,0,cdindlatburst.get()),
 __nsltmp102=nslj.src.math.NslElemMult.eval(__nsltmp102,CDlatfefsacK,FEFsac_in.get())),
 __nsltmp104=nslj.src.math.NslElemMult.eval(__nsltmp104,CDlattanK,CDlattan_in.get())),
 __nsltmp106=nslj.src.math.NslElemMult.eval(__nsltmp106,CDlatsncK,SNCdop_in.get())),
 __nsltmp108=nslj.src.math.NslElemMult.eval(__nsltmp108,CDlatpfcK,PFCfovea_in.get())))) /* rule 108 */;

    //PFCgo_in));
    CDindlatburst_out.set(Nsl2Sigmoid.eval(cdindlatburst,CDlbsigma1,CDlbsigma2,CDlbsigma3,CDlbsigma4)) /* rule 108 */;

    cddirlatburst.set(system.nsldiff.eval(cddirlatburst,cdlatbursttm,
 __nsltmp118=nslj.src.math.NslAdd.eval(__nsltmp118,
 __nsltmp116=nslj.src.math.NslSub.eval(__nsltmp116,
 __nsltmp114=nslj.src.math.NslAdd.eval(__nsltmp114,
 __nsltmp112=nslj.src.math.NslAdd.eval(__nsltmp112,
 __nsltmp110=nslj.src.math.NslSub.eval(__nsltmp110,0,cddirlatburst.get()),
 __nsltmp111=nslj.src.math.NslElemMult.eval(__nsltmp111,CDlatfefsacK,FEFsac_in.get())),
 __nsltmp113=nslj.src.math.NslElemMult.eval(__nsltmp113,CDlatpfcgoK,PFCgo_in.get())),
 __nsltmp115=nslj.src.math.NslElemMult.eval(__nsltmp115,CDlattanK,CDlattan_in.get())),
 __nsltmp117=nslj.src.math.NslElemMult.eval(__nsltmp117,CDlatsncK,SNCdop_in.get())))) /* rule 108 */;

    CDdirlatburst_out.set(Nsl2Sigmoid.eval(cddirlatburst,CDlbsigma1,CDlbsigma2,CDlbsigma3,CDlbsigma4)) /* rule 108 */;
  }


	/* nslInitTempModule inserted by NPP */
public void nslInitTempModule() {
	/* Instantiation statements generated by NslPreProcessor */
	/* temporary variables */
	__nsltmp101 = new double[1][1];
	__nsltmp102 = new double[1][1];
	__nsltmp103 = new double[1][1];
	__nsltmp104 = new double[1][1];
	__nsltmp105 = new double[1][1];
	__nsltmp106 = new double[1][1];
	__nsltmp107 = new double[1][1];
	__nsltmp108 = new double[1][1];
	__nsltmp109 = new double[1][1];
	__nsltmp110 = new double[1][1];
	__nsltmp111 = new double[1][1];
	__nsltmp112 = new double[1][1];
	__nsltmp113 = new double[1][1];
	__nsltmp114 = new double[1][1];
	__nsltmp115 = new double[1][1];
	__nsltmp116 = new double[1][1];
	__nsltmp117 = new double[1][1];
	__nsltmp118 = new double[1][1];
	/* end of automatic instantiation statements */
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempRun inserted by NPP */
public void nslInitTempRun() {
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	for (int i = 0; i < __nsltmp101.length; i++) {
		for (int j = 0; j < __nsltmp101[0].length; j++) {
			__nsltmp101[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp102.length; i++) {
		for (int j = 0; j < __nsltmp102[0].length; j++) {
			__nsltmp102[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp103.length; i++) {
		for (int j = 0; j < __nsltmp103[0].length; j++) {
			__nsltmp103[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp104.length; i++) {
		for (int j = 0; j < __nsltmp104[0].length; j++) {
			__nsltmp104[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp105.length; i++) {
		for (int j = 0; j < __nsltmp105[0].length; j++) {
			__nsltmp105[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp106.length; i++) {
		for (int j = 0; j < __nsltmp106[0].length; j++) {
			__nsltmp106[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp107.length; i++) {
		for (int j = 0; j < __nsltmp107[0].length; j++) {
			__nsltmp107[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp108.length; i++) {
		for (int j = 0; j < __nsltmp108[0].length; j++) {
			__nsltmp108[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp109.length; i++) {
		for (int j = 0; j < __nsltmp109[0].length; j++) {
			__nsltmp109[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp110.length; i++) {
		for (int j = 0; j < __nsltmp110[0].length; j++) {
			__nsltmp110[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp111.length; i++) {
		for (int j = 0; j < __nsltmp111[0].length; j++) {
			__nsltmp111[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp112.length; i++) {
		for (int j = 0; j < __nsltmp112[0].length; j++) {
			__nsltmp112[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp113.length; i++) {
		for (int j = 0; j < __nsltmp113[0].length; j++) {
			__nsltmp113[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp114.length; i++) {
		for (int j = 0; j < __nsltmp114[0].length; j++) {
			__nsltmp114[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp115.length; i++) {
		for (int j = 0; j < __nsltmp115[0].length; j++) {
			__nsltmp115[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp116.length; i++) {
		for (int j = 0; j < __nsltmp116[0].length; j++) {
			__nsltmp116[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp117.length; i++) {
		for (int j = 0; j < __nsltmp117[0].length; j++) {
			__nsltmp117[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp118.length; i++) {
		for (int j = 0; j < __nsltmp118[0].length; j++) {
			__nsltmp118[i][j] = 0;
		}
	}
	/* end of automatic intialisation statements */
}

	/* nslInitTempTrain inserted by NPP */
public void nslInitTempTrain() {
	/* Initialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* Declaration statements generated by NslPreProcessor */
	/* makeinst() declared variables */
	/* temporary variables */
	private  double[][] __nsltmp101;
	private  double[][] __nsltmp102;
	private  double[][] __nsltmp103;
	private  double[][] __nsltmp104;
	private  double[][] __nsltmp105;
	private  double[][] __nsltmp106;
	private  double[][] __nsltmp107;
	private  double[][] __nsltmp108;
	private  double[][] __nsltmp109;
	private  double[][] __nsltmp110;
	private  double[][] __nsltmp111;
	private  double[][] __nsltmp112;
	private  double[][] __nsltmp113;
	private  double[][] __nsltmp114;
	private  double[][] __nsltmp115;
	private  double[][] __nsltmp116;
	private  double[][] __nsltmp117;
	private  double[][] __nsltmp118;
	/* constructor and related methods */
	/* nsl declarations */
	int CorticalArraySize;

	 /*GENERIC CONSTRUCTOR:   */
	 public CDlatburst(String nslName, NslModule nslParent,int CorticalArraySize) {
		super(nslName, nslParent);
		this.CorticalArraySize = CorticalArraySize;
		initSys();
		makeInst(nslName, nslParent,CorticalArraySize);
	}
	public void makeInst(String nslName, NslModule nslParent,int CorticalArraySize){ 
	 FEFsac_in=new NslDinDouble2 ("FEFsac_in",this); //NSLDECLS 
	 SNCdop_in=new NslDinDouble2 ("SNCdop_in",this); //NSLDECLS 
	 PFCgo_in=new NslDinDouble2 ("PFCgo_in",this); //NSLDECLS 
	 PFCfovea_in=new NslDinDouble2 ("PFCfovea_in",this); //NSLDECLS 
	 CDlattan_in=new NslDinDouble2 ("CDlattan_in",this); //NSLDECLS 
	 CDindlatburst_out=new NslDoutDouble2 ("CDindlatburst_out",this,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	 CDdirlatburst_out=new NslDoutDouble2 ("CDdirlatburst_out",this,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	 cdindlatburst=new NslDouble2 ("cdindlatburst",this,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	 cddirlatburst=new NslDouble2 ("cddirlatburst",this,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	}
	/* end of automatic declaration statements */
} //end class
