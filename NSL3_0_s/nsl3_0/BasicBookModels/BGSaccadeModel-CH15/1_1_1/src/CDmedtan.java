/* This file is generated by  NSL3.0 preprocessor*/

/* SCCS  %W%---%G%--%U% */
/* old kversion @(#)CDmedtan.mod	1.8 --- 08/05/99 -- 13:56:10 : jversion  @(#)CDmedtan.mod	1.2---04/23/99--18:39:22 */

// Import statements
 import nslj.src.system.*; 
 import nslj.src.cmd.*; 
 import nslj.src.lang.*; 
 import nslj.src.math.*; 
 import nslj.src.display.*; 
//
// CDmedtan
//
/**
 * CDmedtan class
 * Represents the Caudate Tonically Active Cells Layer
 * @see     CDmedtan
 * @version 0.1 96/11/19
 * @author  Michael Crowley
 * -var private SNCdop_in - input coming from SNC module (of type NslDouble2)<p>
 * -var private CDmedinh_in - input coming from CDmedinh module (of type NslDouble2)<p>
 * -var private CDmedtan_out - output going to CDmedburst module (of type NslDouble2)<p>
 */
 public class CDmedtan extends NslModule/*(int CorticalArraySize, int StriatalArraySize)*/{


//input ports
 NslDinDouble2 SNCdop_in ; /*     (StriatalArraySize,StriatalArraySize)*/
 NslDinDouble2 CDmedinh_in ; /*    (StriatalArraySize,StriatalArraySize)*/

//output ports
 NslDoutDouble2 CDmedtan_out ; /*  (StriatalArraySize,StriatalArraySize)*/

  // private variables
  private  double cdmedtantm;
  private  double cdmedtanTONIC;
  private  double CDSNCdopK;
  private  double CDltsigma1;
  private  double CDltsigma2;
  private  double CDltsigma3;
  private  double CDltsigma4;
 private NslDouble2 cdmedtan ; /*  (StriatalArraySize,StriatalArraySize)*/


public  void initRun () {
 CDmedtan_out.set(0);

    cdmedtantm = 0.01;
    cdmedtanTONIC = 10;
    CDSNCdopK = 0.5;
    CDltsigma1 = 0;
    CDltsigma2 = 10;
    CDltsigma3 = 0;
    CDltsigma4 = 10;
}

public  void simRun () {
  // System.err.println("@@@@ CDmedtanh simRun entered @@@@");
    cdmedtan.set(system.nsldiff.eval(cdmedtan,cdmedtantm,
 __nsltmp104=nslj.src.math.NslSub.eval(__nsltmp104,
 __nsltmp103=nslj.src.math.NslSub.eval(__nsltmp103,
 __nsltmp102=nslj.src.math.NslAdd.eval(__nsltmp102,
 __nsltmp101=nslj.src.math.NslSub.eval(__nsltmp101,0,cdmedtan.get()),cdmedtanTONIC),CDmedinh_in.get()),(CDSNCdopK)*(NslMaxValue.eval(SNCdop_in))))) /* rule 108 */;
    CDmedtan_out.set(Nsl2Sigmoid.eval(cdmedtan,CDltsigma1,CDltsigma2,CDltsigma3,CDltsigma4)) /* rule 108 */;
 }



	/* nslInitTempModule inserted by NPP */
public void nslInitTempModule() {
	/* Instantiation statements generated by NslPreProcessor */
	/* temporary variables */
	__nsltmp101 = new double[1][1];
	__nsltmp102 = new double[1][1];
	__nsltmp103 = new double[1][1];
	__nsltmp104 = new double[1][1];
	/* end of automatic instantiation statements */
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempRun inserted by NPP */
public void nslInitTempRun() {
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	for (int i = 0; i < __nsltmp101.length; i++) {
		for (int j = 0; j < __nsltmp101[0].length; j++) {
			__nsltmp101[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp102.length; i++) {
		for (int j = 0; j < __nsltmp102[0].length; j++) {
			__nsltmp102[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp103.length; i++) {
		for (int j = 0; j < __nsltmp103[0].length; j++) {
			__nsltmp103[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp104.length; i++) {
		for (int j = 0; j < __nsltmp104[0].length; j++) {
			__nsltmp104[i][j] = 0;
		}
	}
	/* end of automatic intialisation statements */
}

	/* nslInitTempTrain inserted by NPP */
public void nslInitTempTrain() {
	/* Initialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* Declaration statements generated by NslPreProcessor */
	/* makeinst() declared variables */
	/* temporary variables */
	private  double[][] __nsltmp101;
	private  double[][] __nsltmp102;
	private  double[][] __nsltmp103;
	private  double[][] __nsltmp104;
	/* constructor and related methods */
	/* nsl declarations */
	int CorticalArraySize;
	int StriatalArraySize;

	 /*GENERIC CONSTRUCTOR:   */
	 public CDmedtan(String nslName, NslModule nslParent,int CorticalArraySize, int StriatalArraySize) {
		super(nslName, nslParent);
		this.CorticalArraySize = CorticalArraySize;
		this.StriatalArraySize = StriatalArraySize;
		initSys();
		makeInst(nslName, nslParent,CorticalArraySize, StriatalArraySize);
	}
	public void makeInst(String nslName, NslModule nslParent,int CorticalArraySize,int StriatalArraySize){ 
	 SNCdop_in=new NslDinDouble2 ("SNCdop_in",this,StriatalArraySize,StriatalArraySize); //NSLDECLS 
	 CDmedinh_in=new NslDinDouble2 ("CDmedinh_in",this,StriatalArraySize,StriatalArraySize); //NSLDECLS 
	 CDmedtan_out=new NslDoutDouble2 ("CDmedtan_out",this,StriatalArraySize,StriatalArraySize); //NSLDECLS 
	 cdmedtan=new NslDouble2 ("cdmedtan",this,StriatalArraySize,StriatalArraySize); //NSLDECLS 
	}
	/* end of automatic declaration statements */
} //end class
