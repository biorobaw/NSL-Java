/* This file is generated by  NSL3.0 preprocessor*/

/* SCCS  %W%---%G%--%U% */
/* old kversion @(#)SNRlatburst.mod	1.8 --- 08/05/99 -- 13:56:37 : jversion  @(#)SNRlatburst.mod	1.2---04/23/99--18:39:48 */

 import nslj.src.system.*; 
 import nslj.src.cmd.*; 
 import nslj.src.lang.*; 
 import nslj.src.math.*; 
 import nslj.src.display.*; 

//
// SNRlatburst
//
/**
 * SNRlatburst class
 * Represents the Substantia Nigra pars Reticulata Burst Cells Layer
 * @see    SNRlatburst
 * @version 0.1 96/11/19
 * @author  Michael Crowley
 * -var private CDdirlatburst_in - input coming from CDlatburst module (of type NslDouble2)<p>
 * -var private STNlatburst_in - input coming from STNlatburst module (of type NslDouble2)<p>
 * -var private SNRlatburst_out - output going to SC module (of type NslDouble2)<p>
 */
 public class SNRlatburst extends NslModule /*(int CorticalArraySize)*/ {
//input ports
    public NslDinDouble2 CDdirlatburst_in ; /*(CorticalArraySize,CorticalArraySize)   */
    public NslDinDouble2 STNlatburst_in ; /*(CorticalArraySize,CorticalArraySize)   */
//outpu ports
    public NslDoutDouble2 SNRlatburst_out ; /*(CorticalArraySize,CorticalArraySize)   */

  // private variables


  private  double snrlatbursttm;
  private  double SNRlatburstTONIC;
  private  double SNRcdlbK;
  private  double SNRstnlbK;
  private  double SNRlbsigma1;
  private  double SNRlbsigma2;
  private  double SNRlbsigma3;
  private  double SNRlbsigma4;
  private   NslDouble2 snrlatburst ; /* (CorticalArraySize,CorticalArraySize)  */
  
public  void initRun () {

    snrlatbursttm = 0.01;
    SNRlatburstTONIC = 30;
    SNRcdlbK = 1;
    SNRstnlbK = 0.5;
    SNRlbsigma1 = 15;
    SNRlbsigma2 = 60;
    SNRlbsigma3 = 0;
    SNRlbsigma4 = 60;
    snrlatburst.set(30);

 	// 99/8/2 aa check on the following
    SNRlatburst_out.set(Nsl2Sigmoid.eval(snrlatburst,SNRlbsigma1,SNRlbsigma2,SNRlbsigma3,SNRlbsigma4)) /* rule 108 */;
  }
public  void simRun () {
  // System.err.println("@@@@ SNRlatburst simRun entered @@@@");
    snrlatburst.set(system.nsldiff.eval(snrlatburst,snrlatbursttm,
 __nsltmp106=nslj.src.math.NslAdd.eval(__nsltmp106,
 __nsltmp104=nslj.src.math.NslSub.eval(__nsltmp104,
 __nsltmp102=nslj.src.math.NslAdd.eval(__nsltmp102,
 __nsltmp101=nslj.src.math.NslSub.eval(__nsltmp101,0,snrlatburst.get()),SNRlatburstTONIC),
 __nsltmp103=nslj.src.math.NslElemMult.eval(__nsltmp103,SNRcdlbK,CDdirlatburst_in.get())),
 __nsltmp105=nslj.src.math.NslElemMult.eval(__nsltmp105,SNRstnlbK,STNlatburst_in.get())))) /* rule 108 */;
    SNRlatburst_out.set(Nsl2Sigmoid.eval(snrlatburst,SNRlbsigma1,SNRlbsigma2,SNRlbsigma3,SNRlbsigma4)) /* rule 108 */;

  }
	/* nslInitTempModule inserted by NPP */
public void nslInitTempModule() {
	/* Instantiation statements generated by NslPreProcessor */
	/* temporary variables */
	__nsltmp101 = new double[1][1];
	__nsltmp102 = new double[1][1];
	__nsltmp103 = new double[1][1];
	__nsltmp104 = new double[1][1];
	__nsltmp105 = new double[1][1];
	__nsltmp106 = new double[1][1];
	/* end of automatic instantiation statements */
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempRun inserted by NPP */
public void nslInitTempRun() {
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	for (int i = 0; i < __nsltmp101.length; i++) {
		for (int j = 0; j < __nsltmp101[0].length; j++) {
			__nsltmp101[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp102.length; i++) {
		for (int j = 0; j < __nsltmp102[0].length; j++) {
			__nsltmp102[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp103.length; i++) {
		for (int j = 0; j < __nsltmp103[0].length; j++) {
			__nsltmp103[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp104.length; i++) {
		for (int j = 0; j < __nsltmp104[0].length; j++) {
			__nsltmp104[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp105.length; i++) {
		for (int j = 0; j < __nsltmp105[0].length; j++) {
			__nsltmp105[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp106.length; i++) {
		for (int j = 0; j < __nsltmp106[0].length; j++) {
			__nsltmp106[i][j] = 0;
		}
	}
	/* end of automatic intialisation statements */
}

	/* nslInitTempTrain inserted by NPP */
public void nslInitTempTrain() {
	/* Initialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* Declaration statements generated by NslPreProcessor */
	/* makeinst() declared variables */
	/* temporary variables */
	private  double[][] __nsltmp101;
	private  double[][] __nsltmp102;
	private  double[][] __nsltmp103;
	private  double[][] __nsltmp104;
	private  double[][] __nsltmp105;
	private  double[][] __nsltmp106;
	/* constructor and related methods */
	/* nsl declarations */
	int CorticalArraySize;

	 /*GENERIC CONSTRUCTOR:   */
	 public SNRlatburst(String nslName, NslModule nslParent,int CorticalArraySize) {
		super(nslName, nslParent);
		this.CorticalArraySize = CorticalArraySize;
		initSys();
		makeInst(nslName, nslParent,CorticalArraySize);
	}
	public void makeInst(String nslName, NslModule nslParent,int CorticalArraySize){ 
	 CDdirlatburst_in=new NslDinDouble2 ("CDdirlatburst_in",this,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	 STNlatburst_in=new NslDinDouble2 ("STNlatburst_in",this,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	 SNRlatburst_out=new NslDoutDouble2 ("SNRlatburst_out",this,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	 snrlatburst=new NslDouble2 ("snrlatburst",this,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	}
	/* end of automatic declaration statements */
} //end class
