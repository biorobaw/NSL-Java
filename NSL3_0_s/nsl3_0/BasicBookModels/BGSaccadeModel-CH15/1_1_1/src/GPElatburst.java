/* This file is generated by  NSL3.0 preprocessor*/

/* SCCS  %W%---%G%--%U% */
/* old kversion @(#)GPElatburst.mod	1.8 --- 08/05/99 -- 13:56:20 : jversion  @(#)GPElatburst.mod	1.2---04/23/99--18:39:29 */

// Import statements
 import nslj.src.system.*; 
 import nslj.src.cmd.*; 
 import nslj.src.lang.*; 
 import nslj.src.math.*; 
 import nslj.src.display.*; 

//
// GPElatburst
//
/**
 * GPElatburst class
 * Represents the Globus Pallidus External Burst Cells Layer
 * @see    GPElatburst
 * @version 0.1 96/11/19
 * @author  Michael Crowley
 * -var private CDindlatburst_in - input coming from CDlatburst module (of type NslDouble2)<p>
 * -var private GPElatburst_out - output going to STNlatburst module (of type NslDouble2)<p>
 */

 public class GPElatburst extends NslModule/*(int CorticalArraySize)*/{
  //input ports
   public NslDinDouble2 CDindlatburst_in ; /* (CorticalArraySize,CorticalArraySize)   */

  //output ports
   public NslDoutDouble2 GPElatburst_out ; /* (CorticalArraySize,CorticalArraySize)*/          

  // private variables

  private  double gpelatbursttm;
  private  double GPElatburstTONIC;
  private  double GPElatburstK;
  private  double GPElbsigma1;
  private  double GPElbsigma2;
  private  double GPElbsigma3;
  private  double GPElbsigma4;

  private NslDouble2 gpelatburst ; /* (CorticalArraySize,CorticalArraySize)  */
  

  public  void initRun () {
    GPElatburst_out.set(0);

	//System.err.println("GPElatburst:=1=");
    gpelatbursttm = 0.01;
	//System.err.println("GPElatburst:=2=");
    GPElatburstTONIC = 30;
	//System.err.println("GPElatburst:=3=");
    GPElatburstK = 2;
	//System.err.println("GPElatburst:=4=");
    GPElbsigma1 = 0;
	//System.err.println("GPElatburst:=5=");
    GPElbsigma2 = 60;
	//System.err.println("GPElatburst:=6=");
    GPElbsigma3 = 0;
	//System.err.println("GPElatburst:=7=");
    GPElbsigma4 = 60;
	//System.err.println("GPElatburst:=8=");
  }
  public  void simRun () {

      // System.err.println("@@@@ GPElatburst simRun entered @@@@");
    gpelatburst.set(system.nsldiff.eval(gpelatburst,gpelatbursttm,
 __nsltmp104=nslj.src.math.NslSub.eval(__nsltmp104,
 __nsltmp102=nslj.src.math.NslAdd.eval(__nsltmp102,
 __nsltmp101=nslj.src.math.NslSub.eval(__nsltmp101,0,gpelatburst.get()),GPElatburstTONIC),
 __nsltmp103=nslj.src.math.NslElemMult.eval(__nsltmp103,GPElatburstK,CDindlatburst_in.get())))) /* rule 108 */;
    GPElatburst_out.set(Nsl2Sigmoid.eval(gpelatburst,GPElbsigma1,GPElbsigma2,GPElbsigma3,GPElbsigma4)) /* rule 108 */;
  }

	/* nslInitTempModule inserted by NPP */
public void nslInitTempModule() {
	/* Instantiation statements generated by NslPreProcessor */
	/* temporary variables */
	__nsltmp101 = new double[1][1];
	__nsltmp102 = new double[1][1];
	__nsltmp103 = new double[1][1];
	__nsltmp104 = new double[1][1];
	/* end of automatic instantiation statements */
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempRun inserted by NPP */
public void nslInitTempRun() {
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	for (int i = 0; i < __nsltmp101.length; i++) {
		for (int j = 0; j < __nsltmp101[0].length; j++) {
			__nsltmp101[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp102.length; i++) {
		for (int j = 0; j < __nsltmp102[0].length; j++) {
			__nsltmp102[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp103.length; i++) {
		for (int j = 0; j < __nsltmp103[0].length; j++) {
			__nsltmp103[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp104.length; i++) {
		for (int j = 0; j < __nsltmp104[0].length; j++) {
			__nsltmp104[i][j] = 0;
		}
	}
	/* end of automatic intialisation statements */
}

	/* nslInitTempTrain inserted by NPP */
public void nslInitTempTrain() {
	/* Initialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* Declaration statements generated by NslPreProcessor */
	/* makeinst() declared variables */
	/* temporary variables */
	private  double[][] __nsltmp101;
	private  double[][] __nsltmp102;
	private  double[][] __nsltmp103;
	private  double[][] __nsltmp104;
	/* constructor and related methods */
	/* nsl declarations */
	int CorticalArraySize;

	 /*GENERIC CONSTRUCTOR:   */
	 public GPElatburst(String nslName, NslModule nslParent,int CorticalArraySize) {
		super(nslName, nslParent);
		this.CorticalArraySize = CorticalArraySize;
		initSys();
		makeInst(nslName, nslParent,CorticalArraySize);
	}
	public void makeInst(String nslName, NslModule nslParent,int CorticalArraySize){ 
	 CDindlatburst_in=new NslDinDouble2 ("CDindlatburst_in",this,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	 GPElatburst_out=new NslDoutDouble2 ("GPElatburst_out",this,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	 gpelatburst=new NslDouble2 ("gpelatburst",this,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	}
	/* end of automatic declaration statements */
} //end class
