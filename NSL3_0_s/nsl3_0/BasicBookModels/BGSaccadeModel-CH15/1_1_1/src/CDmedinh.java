/* This file is generated by  NSL3.0 preprocessor*/

/* SCCS  %W%---%G%--%U% */
/* old kversion @(#)CDmedinh.mod	1.8 --- 08/05/99 -- 13:56:09 : jversion  @(#)CDmedinh.mod	1.2---04/23/99--18:39:21 */

// Import statements
/* verbatim NSLJ */
import nslj.src.lang.*;
import nslj.src.math.*;
 /* verbatim off */
//
// Global variables used in this module
//
// NslInt2 FEFxmap [];
// NslInt2 FEFymap [];
// NslInt2 LIPxmap [];
// NslInt2 LIPymap [];
//
//

//
// CDmedinh
//
/**
 * CDmedinh class
 * Represents the Caudate Non-dopaminergic Interneuron Cells Layer
 * @see     CDmedinh
 * @version 0.1 96/11/19
 * @author  Michael Crowley
 * -var public FEFsac_in - input coming from FEF module (of type NslDouble2)<p>
 * -var public LIPmem_in - input coming from LIP module (of type NslDouble2)<p>
 * -var public CDmedinh_out - output going to CDmedtan module (of type NslDouble2)<p>
 */
public class CDmedinh/*(int CorticalArraySize,int StriatalArraySize)*/  extends Func/*(CorticalArraySize)*/
{
  // input ports
  public NslDinInt3  FEFxmap_bulk ; /*(CorticalArraySize,CorticalArraySize,CorticalArraySize)*/
  public NslDinInt3  FEFymap_bulk ; /*(CorticalArraySize,CorticalArraySize,CorticalArraySize)*/
  public NslDinInt3  LIPxmap_bulk ; /*(CorticalArraySize,CorticalArraySize,CorticalArraySize)*/
  public NslDinInt3  LIPymap_bulk ; /*(CorticalArraySize,CorticalArraySize,CorticalArraySize)*/
 public    NslDinDouble2 FEFsac_in ; /*  (CorticalArraySize,CorticalArraySize) */
 public    NslDinDouble2 LIPmem_in ; /*  (CorticalArraySize,CorticalArraySize)*/

  // output ports
 public    NslDoutDouble2 CDmedinh_out ; /* (StriatalArraySize,StriatalArraySize)*/

  // private variables
  private  double cdmedinhtm;
  private  double CDlisigma1;
  private  double CDlisigma2;
  private  double CDlisigma3;
  private  double CDlisigma4;

  private  int[][][]  FEFxmap;
  private  int[][][]  FEFymap;
  private  int[][][]  LIPxmap;
  private  int[][][]  LIPymap;


 private   NslDouble2 CDfefinput ; /*  (StriatalArraySize,StriatalArraySize)*/
 private   NslDouble2 CDlipinput ; /*  (StriatalArraySize,StriatalArraySize)*/
 private   NslDouble2 cdmedinh ; /*   (StriatalArraySize,StriatalArraySize)*/

public  void initModule()
{
    /*
    FEFxmap_bulk = nslRefParent() ;
    FEFymap_bulk = nslRefParent() ;
    LIPxmap_bulk = nslRefParent() ;
    LIPymap_bulk = nslRefParent() ;
    */
    FEFxmap=(int[][][])FEFxmap_bulk.get()/* rule 112 */;
    FEFymap=(int[][][])FEFymap_bulk.get()/* rule 112 */; 
    LIPxmap=(int[][][])LIPxmap_bulk.get()/* rule 112 */;
    LIPymap=(int[][][])LIPymap_bulk.get()/* rule 112 */;
}


public  void initRun () {
    CDmedinh_out.set(0);
    cdmedinhtm = 0.01;
    CDlisigma1 = 45;
    CDlisigma2 = 90;
    CDlisigma3 = 0;
    CDlisigma4 = 60;
}
public  void simRun () {
     int tempint;

   // System.err.println("@@@@ CDmedinh simRun entered @@@@");

    tempint=SetCD(CDfefinput,FEFxmap,FEFymap,FEFsac_in)/* rule 102*/;
    tempint=SetCD(CDlipinput,LIPxmap,LIPymap,LIPmem_in)/* rule 102*/;

    cdmedinh.set(system.nsldiff.eval(cdmedinh,cdmedinhtm,
 __nsltmp103=nslj.src.math.NslAdd.eval(__nsltmp103,
 __nsltmp102=nslj.src.math.NslAdd.eval(__nsltmp102,
 __nsltmp101=nslj.src.math.NslSub.eval(__nsltmp101,0,cdmedinh.get()),CDfefinput.get()),CDlipinput.get()))) /* rule 108 */;

    CDmedinh_out.set(Nsl2Sigmoid.eval(cdmedinh,CDlisigma1,CDlisigma2,CDlisigma3,CDlisigma4)) /* rule 108 */;
  }

	/* nslInitTempModule inserted by NPP */
public void nslInitTempModule() {
	/* Instantiation statements generated by NslPreProcessor */
	/* temporary variables */
	__nsltmp101 = new double[1][1];
	__nsltmp102 = new double[1][1];
	__nsltmp103 = new double[1][1];
	/* end of automatic instantiation statements */
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempRun inserted by NPP */
public void nslInitTempRun() {
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	for (int i = 0; i < __nsltmp101.length; i++) {
		for (int j = 0; j < __nsltmp101[0].length; j++) {
			__nsltmp101[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp102.length; i++) {
		for (int j = 0; j < __nsltmp102[0].length; j++) {
			__nsltmp102[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp103.length; i++) {
		for (int j = 0; j < __nsltmp103[0].length; j++) {
			__nsltmp103[i][j] = 0;
		}
	}
	/* end of automatic intialisation statements */
}

	/* nslInitTempTrain inserted by NPP */
public void nslInitTempTrain() {
	/* Initialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* Declaration statements generated by NslPreProcessor */
	/* makeinst() declared variables */
	/* temporary variables */
	private  double[][] __nsltmp101;
	private  double[][] __nsltmp102;
	private  double[][] __nsltmp103;
	/* constructor and related methods */
	/* nsl declarations */
	int CorticalArraySize;
	int StriatalArraySize;

	 /*GENERIC CONSTRUCTOR:   */
	 public CDmedinh(String nslName, NslModule nslParent,int CorticalArraySize, int StriatalArraySize) {
		super(nslName, nslParent,CorticalArraySize);
		this.CorticalArraySize = CorticalArraySize;
		this.StriatalArraySize = StriatalArraySize;
		initSys();
		makeInst(nslName, nslParent,CorticalArraySize, StriatalArraySize);
	}
	public void makeInst(String nslName, NslModule nslParent,int CorticalArraySize,int StriatalArraySize){ 
	 FEFxmap_bulk=new NslDinInt3 ("FEFxmap_bulk",this,CorticalArraySize,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	 FEFymap_bulk=new NslDinInt3 ("FEFymap_bulk",this,CorticalArraySize,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	 LIPxmap_bulk=new NslDinInt3 ("LIPxmap_bulk",this,CorticalArraySize,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	 LIPymap_bulk=new NslDinInt3 ("LIPymap_bulk",this,CorticalArraySize,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	 FEFsac_in=new NslDinDouble2 ("FEFsac_in",this,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	 LIPmem_in=new NslDinDouble2 ("LIPmem_in",this,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	 CDmedinh_out=new NslDoutDouble2 ("CDmedinh_out",this,StriatalArraySize,StriatalArraySize); //NSLDECLS 
	 CDfefinput=new NslDouble2 ("CDfefinput",this,StriatalArraySize,StriatalArraySize); //NSLDECLS 
	 CDlipinput=new NslDouble2 ("CDlipinput",this,StriatalArraySize,StriatalArraySize); //NSLDECLS 
	 cdmedinh=new NslDouble2 ("cdmedinh",this,StriatalArraySize,StriatalArraySize); //NSLDECLS 
	}
	/* end of automatic declaration statements */
} // end class
