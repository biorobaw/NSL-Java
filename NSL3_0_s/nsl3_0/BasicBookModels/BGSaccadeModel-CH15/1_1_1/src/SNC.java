/* This file is generated by  NSL3.0 preprocessor*/

/* SCCS  %W%---%G%--%U% */
/* old kversion @(#)SNC.mod	1.8 --- 08/05/99 -- 13:56:37 : jversion  @(#)SNC.mod	1.2---04/23/99--18:39:48 */

 import nslj.src.system.*; 
 import nslj.src.cmd.*; 
 import nslj.src.lang.*; 
 import nslj.src.math.*; 
 import nslj.src.display.*; 


//
// SNC module
//
/**
 * SNC class
 * Represents the Substantia Nigra pars Compacta Layer
 * @see    SNC
 * @version 0.1 96/11/19
 * @author  Michael Crowley
 * -var private SNCdop_out - output going to CDlatburst and CDmedburst modules (of type NslDouble2)<p>
 */

 public class SNC extends NslModule /*(int CorticalArraySize )*/{
	//input ports
   public NslDinDouble2 LimbicCortex_in ; /*(CorticalArraySize,CorticalArraySize)*/
	//output ports
   public NslDoutDouble2 SNCdop_out ; /*(CorticalArraySize,CorticalArraySize)*/  

//privates
 

   private NslDouble2 sncdop ; /* (CorticalArraySize,CorticalArraySize)*/

  // private variables
  private  double sncdoptm;
  private  double SNCdopsigma1;
  private  double SNCdopsigma2;
  private  double SNCdopsigma3;
  private  double SNCdopsigma4;

  public  void initRun () {
    sncdoptm = 0.01;
    SNCdopsigma1 = 0;
    SNCdopsigma2 = 60;
    SNCdopsigma3 = 0;
    SNCdopsigma4 = 20; //10;
  }

  public  void simRun () {
  // System.err.println("@@@@ SNC simRun entered @@@@");
    sncdop.set(system.nsldiff.eval(sncdop,sncdoptm,
 __nsltmp102=nslj.src.math.NslAdd.eval(__nsltmp102,
 __nsltmp101=nslj.src.math.NslSub.eval(__nsltmp101,0,sncdop.get()),LimbicCortex_in.get()))) /* rule 108 */;
    SNCdop_out.set(Nsl2Sigmoid.eval(sncdop,SNCdopsigma1,SNCdopsigma2,SNCdopsigma3,SNCdopsigma4)) /* rule 108 */;
  }

	/* nslInitTempModule inserted by NPP */
public void nslInitTempModule() {
	/* Instantiation statements generated by NslPreProcessor */
	/* temporary variables */
	__nsltmp101 = new double[1][1];
	__nsltmp102 = new double[1][1];
	/* end of automatic instantiation statements */
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempRun inserted by NPP */
public void nslInitTempRun() {
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	for (int i = 0; i < __nsltmp101.length; i++) {
		for (int j = 0; j < __nsltmp101[0].length; j++) {
			__nsltmp101[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp102.length; i++) {
		for (int j = 0; j < __nsltmp102[0].length; j++) {
			__nsltmp102[i][j] = 0;
		}
	}
	/* end of automatic intialisation statements */
}

	/* nslInitTempTrain inserted by NPP */
public void nslInitTempTrain() {
	/* Initialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* Declaration statements generated by NslPreProcessor */
	/* makeinst() declared variables */
	/* temporary variables */
	private  double[][] __nsltmp101;
	private  double[][] __nsltmp102;
	/* constructor and related methods */
	/* nsl declarations */
	int CorticalArraySize;

	 /*GENERIC CONSTRUCTOR:   */
	 public SNC(String nslName, NslModule nslParent,int CorticalArraySize) {
		super(nslName, nslParent);
		this.CorticalArraySize = CorticalArraySize;
		initSys();
		makeInst(nslName, nslParent,CorticalArraySize);
	}
	public void makeInst(String nslName, NslModule nslParent,int CorticalArraySize){ 
	 LimbicCortex_in=new NslDinDouble2 ("LimbicCortex_in",this,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	 SNCdop_out=new NslDoutDouble2 ("SNCdop_out",this,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	 sncdop=new NslDouble2 ("sncdop",this,CorticalArraySize,CorticalArraySize); //NSLDECLS 
	}
	/* end of automatic declaration statements */
} //end class
