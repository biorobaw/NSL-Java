/* SCCS  %W--- %G% -- %U% */
//
// Ulayer
//
//////////////////////////////////////////////////////////////////////

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;

/*********************************/

public class Ulayer extends NslModule {

    //inports
    public  NslDinDouble1 s_in;  
    public  NslDinDouble0 v_in;

    //outports
    public  NslDoutDouble1 uf;

    //variables
    private  NslDouble1 up;  //for now; change when nslGetValue available
    private  NslDouble0 w1;
    private  NslDouble0 w2;
    private  NslDouble0 h1;
    private  NslDouble0 k;
    private double tau;

    public void initRun(){
	uf.set(0);
	up.set(0);
	tau = 1.0;
	w1.set( 1.0);
	w2.set( 1.0);
	h1.set( 0.1);
	k.set( 0.1);
    }

    public void simRun(){
	//compute : up=up+((timestep/tu)*du/dt)
	up.set(  system.nsldiff.eval(up, tau, __temp6.setReference(NslAdd.eval(__temp6.get(), __temp5.setReference(NslSub.eval(__temp5.get(), __temp4.setReference(NslSub.eval(__temp4.get(), __temp3.setReference(NslAdd.eval(__temp3.get(), __temp0.setReference(NslSub.eval(__temp0.get(), 0, up)), __temp1.setReference(NslElemMult.eval(__temp1.get(), w1, uf)))), __temp2.setReference(w2.get()*v_in.get()))), h1)), s_in)) ));
	uf.set(  NslStep.eval(up,(double)k.get(),0,1.0));
    }

	/******************************************************/
	/*                                                    */
	/* Generated by NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* Formal parameters */
	int size;

	/* Temporary variables */
		NslDouble1 __temp0 = new NslDouble1(1);
		NslDouble1 __temp1 = new NslDouble1(1);
		NslDouble0 __temp2 = new NslDouble0();
		NslDouble1 __temp3 = new NslDouble1(1);
		NslDouble1 __temp4 = new NslDouble1(1);
		NslDouble1 __temp5 = new NslDouble1(1);
		NslDouble1 __temp6 = new NslDouble1(1);

	/* GENERIC CONSTRUCTOR: */
	public Ulayer(String nslName, NslModule nslParent, int size) {
		super(nslName, nslParent);
		this.size=size;
		initSys();
		makeInst(nslName, nslParent, size);
	}

	public void makeInst(String nslName, NslModule nslParent, int size) { 
		callFromConstructorTop();
		s_in = new NslDinDouble1("s_in", this);
		v_in = new NslDinDouble0("v_in", this);
		uf = new NslDoutDouble1("uf", this, size);
		up = new NslDouble1("up", this, size);
		w1 = new NslDouble0("w1", this);
		w2 = new NslDouble0("w2", this);
		h1 = new NslDouble0("h1", this);
		k = new NslDouble0("k", this);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}


