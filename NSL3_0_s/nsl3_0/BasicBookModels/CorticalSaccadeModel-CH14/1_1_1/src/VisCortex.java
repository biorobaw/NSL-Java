/* This file is generated by  NSL3.0 preprocessor*/

/* SCCS  %W% --- %G% -- %U% */

/*VisCortex
* Burst Neurons
* @see VisCortex.nslm
* @version 98/6/18
* @author Dominey and Alexander
*
*/
 import nslj.src.system.*; 
 import nslj.src.cmd.*; 
 import nslj.src.lang.*; 
 import nslj.src.math.*; 
 import nslj.src.display.*; 

 public class VisCortex extends NslModule/*(int stdsz)*/{

// ports
public NslDinFloat2 retina ; /* (stdsz,stdsz)*/
public NslDoutFloat2 posteriorParietal ; /*(stdsz,stdsz)*/

//parameters
private NslFloat0 posteriorParietal_tm ; /*()*/  
private NslFloat0 arrMT_tm ; /*()*/  
private NslFloat0 arrV4_tm ; /*()*/  
private NslFloat0 arrV2_tm ; /*()*/  
private NslFloat0 arrV1_tm ; /*()*/  
private NslFloat0 arrLGN_tm ; /*()*/  

//vars
private NslFloat2 arrMT ; /*(stdsz,stdsz)*/  
private NslFloat2 arrV4 ; /*(stdsz,stdsz)*/  
private NslFloat2 arrV2 ; /*(stdsz,stdsz)*/  
private NslFloat2 arrV1 ; /*(stdsz,stdsz)*/  
private NslFloat2 arrLGN ; /*(stdsz,stdsz)*/  


public  void initModule() {	
}

public  void initRun() {       
       posteriorParietal.set(0);
       arrMT.set(0);
       arrV4.set(0);
       arrV2.set(0);
       arrV1.set(0);
       arrLGN.set(0);

	 posteriorParietal_tm.set(0.006);  
	 arrMT_tm.set(0.006);  
	 arrV4_tm.set(0.006);
	 arrV2_tm.set(0.006);  
	 arrV1_tm.set(0.006);  
	 arrLGN_tm.set(0.006);  
}
public  void simRun() {
	if (system.debug>=16) {
	System.out.println(("debug: VisCortex: retina ")+(retina));
	}

	posteriorParietal.set(system.nsldiff.eval(posteriorParietal,posteriorParietal_tm,
 __nsltmp102=nslj.src.math.NslAdd.eval(__nsltmp102,
 __nsltmp101=nslj.src.math.NslSub.eval(__nsltmp101,0,posteriorParietal.get()),arrMT.get()))) /* rule 108 */;
	arrMT.set(system.nsldiff.eval(arrMT,arrMT_tm,
 __nsltmp104=nslj.src.math.NslAdd.eval(__nsltmp104,
 __nsltmp103=nslj.src.math.NslSub.eval(__nsltmp103,0,arrMT.get()),arrV4.get()))) /* rule 108 */;
	arrV4.set(system.nsldiff.eval(arrV4,arrV4_tm,
 __nsltmp106=nslj.src.math.NslAdd.eval(__nsltmp106,
 __nsltmp105=nslj.src.math.NslSub.eval(__nsltmp105,0,arrV4.get()),arrV2.get()))) /* rule 108 */;
	arrV2.set(system.nsldiff.eval(arrV2,arrV2_tm,
 __nsltmp108=nslj.src.math.NslAdd.eval(__nsltmp108,
 __nsltmp107=nslj.src.math.NslSub.eval(__nsltmp107,0,arrV2.get()),arrV1.get()))) /* rule 108 */;
	arrV1.set(system.nsldiff.eval(arrV1,arrV1_tm,
 __nsltmp110=nslj.src.math.NslAdd.eval(__nsltmp110,
 __nsltmp109=nslj.src.math.NslSub.eval(__nsltmp109,0,arrV1.get()),arrLGN.get()))) /* rule 108 */;
	arrLGN.set(system.nsldiff.eval(arrLGN,arrLGN_tm,
 __nsltmp112=nslj.src.math.NslAdd.eval(__nsltmp112,
 __nsltmp111=nslj.src.math.NslSub.eval(__nsltmp111,0,arrLGN.get()),retina.get()))) /* rule 108 */;

	if (system.debug>=16) {
	System.out.println("VisCortex: simRun: posteriorParietal ");
	System.out.println(posteriorParietal);
	}


}
	/* nslInitTempModule inserted by NPP */
public void nslInitTempModule() {
	/* Instantiation statements generated by NslPreProcessor */
	/* temporary variables */
	__nsltmp101 = new float[1][1];
	__nsltmp102 = new float[1][1];
	__nsltmp103 = new float[1][1];
	__nsltmp104 = new float[1][1];
	__nsltmp105 = new float[1][1];
	__nsltmp106 = new float[1][1];
	__nsltmp107 = new float[1][1];
	__nsltmp108 = new float[1][1];
	__nsltmp109 = new float[1][1];
	__nsltmp110 = new float[1][1];
	__nsltmp111 = new float[1][1];
	__nsltmp112 = new float[1][1];
	/* end of automatic instantiation statements */
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempRun inserted by NPP */
public void nslInitTempRun() {
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	for (int i = 0; i < __nsltmp101.length; i++) {
		for (int j = 0; j < __nsltmp101[0].length; j++) {
			__nsltmp101[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp102.length; i++) {
		for (int j = 0; j < __nsltmp102[0].length; j++) {
			__nsltmp102[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp103.length; i++) {
		for (int j = 0; j < __nsltmp103[0].length; j++) {
			__nsltmp103[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp104.length; i++) {
		for (int j = 0; j < __nsltmp104[0].length; j++) {
			__nsltmp104[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp105.length; i++) {
		for (int j = 0; j < __nsltmp105[0].length; j++) {
			__nsltmp105[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp106.length; i++) {
		for (int j = 0; j < __nsltmp106[0].length; j++) {
			__nsltmp106[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp107.length; i++) {
		for (int j = 0; j < __nsltmp107[0].length; j++) {
			__nsltmp107[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp108.length; i++) {
		for (int j = 0; j < __nsltmp108[0].length; j++) {
			__nsltmp108[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp109.length; i++) {
		for (int j = 0; j < __nsltmp109[0].length; j++) {
			__nsltmp109[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp110.length; i++) {
		for (int j = 0; j < __nsltmp110[0].length; j++) {
			__nsltmp110[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp111.length; i++) {
		for (int j = 0; j < __nsltmp111[0].length; j++) {
			__nsltmp111[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp112.length; i++) {
		for (int j = 0; j < __nsltmp112[0].length; j++) {
			__nsltmp112[i][j] = 0;
		}
	}
	/* end of automatic intialisation statements */
}

	/* nslInitTempTrain inserted by NPP */
public void nslInitTempTrain() {
	/* Initialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* Declaration statements generated by NslPreProcessor */
	/* makeinst() declared variables */
	/* temporary variables */
	private  float[][] __nsltmp101;
	private  float[][] __nsltmp102;
	private  float[][] __nsltmp103;
	private  float[][] __nsltmp104;
	private  float[][] __nsltmp105;
	private  float[][] __nsltmp106;
	private  float[][] __nsltmp107;
	private  float[][] __nsltmp108;
	private  float[][] __nsltmp109;
	private  float[][] __nsltmp110;
	private  float[][] __nsltmp111;
	private  float[][] __nsltmp112;
	/* constructor and related methods */
	/* nsl declarations */
	int stdsz;

	 /*GENERIC CONSTRUCTOR:   */
	 public VisCortex(String nslName, NslModule nslParent,int stdsz) {
		super(nslName, nslParent);
		this.stdsz = stdsz;
		initSys();
		makeInst(nslName, nslParent,stdsz);
	}
	public void makeInst(String nslName, NslModule nslParent,int stdsz){ 
	 retina=new NslDinFloat2 ("retina",this,stdsz,stdsz); //NSLDECLS 
	 posteriorParietal=new NslDoutFloat2 ("posteriorParietal",this,stdsz,stdsz); //NSLDECLS 
	 posteriorParietal_tm=new NslFloat0 ("posteriorParietal_tm",this); //NSLDECLS 
	 arrMT_tm=new NslFloat0 ("arrMT_tm",this); //NSLDECLS 
	 arrV4_tm=new NslFloat0 ("arrV4_tm",this); //NSLDECLS 
	 arrV2_tm=new NslFloat0 ("arrV2_tm",this); //NSLDECLS 
	 arrV1_tm=new NslFloat0 ("arrV1_tm",this); //NSLDECLS 
	 arrLGN_tm=new NslFloat0 ("arrLGN_tm",this); //NSLDECLS 
	 arrMT=new NslFloat2 ("arrMT",this,stdsz,stdsz); //NSLDECLS 
	 arrV4=new NslFloat2 ("arrV4",this,stdsz,stdsz); //NSLDECLS 
	 arrV2=new NslFloat2 ("arrV2",this,stdsz,stdsz); //NSLDECLS 
	 arrV1=new NslFloat2 ("arrV1",this,stdsz,stdsz); //NSLDECLS 
	 arrLGN=new NslFloat2 ("arrLGN",this,stdsz,stdsz); //NSLDECLS 
	}
	/* end of automatic declaration statements */
}
