/* This file is generated by  NSL3.0 preprocessor*/

/* SCCS  %W% --- %G% -- %U% */

/*MLBN
* Medium lead burst neurons -  module
* @see  MLBN.nslm
* @version 98/6/18
* @author Dominey and Alexander
*/
 import nslj.src.system.*; 
 import nslj.src.cmd.*; 
 import nslj.src.lang.*; 
 import nslj.src.math.*; 
 import nslj.src.display.*; 

 public class MLBN extends NslModule /*(int stdsz)*/  {

// ports
public NslDinFloat2 stm ; /*(stdsz,stdsz)*/  //input - spatio temporal transformations
public NslDinFloat2 llbn ; /*(stdsz,stdsz)*/  //input
public NslDoutFloat2 mlbn ; /* (stdsz,stdsz)*/ // output
// parameters 
private NslFloat0 mlbnPot_tm ; /*()*/
private NslFloat0 mlbn_kx1 ; /*()*/
private NslFloat0 mlbn_kx2 ; /*()*/
private NslFloat0 mlbn_ky1 ; /*()*/
private NslFloat0 mlbn_ky2 ; /*()*/
// vars
private NslFloat2 mlbnPot ; /* (stdsz,stdsz)*/	// medium lead burst neurons of the brainstem saccade generator


public  void initRun() {
       mlbn.set(0);
       mlbnPot.set(0);

	mlbnPot_tm.set(0.008);
	mlbn_kx1.set(0);
	mlbn_kx2.set(1500);
	mlbn_ky1.set(0);
	mlbn_ky2.set(950);

}
public  void simRun() {
	// leftSTM, rightSTM etc have weights that increase with distance from fovea
	// performing the SpatioTeMporal transformation.
	// ^ = pointwise multiplication
	// medium lead burst neurons - see Hepp and Henn (in refs) for details.

	mlbnPot.set(system.nsldiff.eval(mlbnPot,mlbnPot_tm,
 __nsltmp103=nslj.src.math.NslAdd.eval(__nsltmp103,
 __nsltmp101=nslj.src.math.NslSub.eval(__nsltmp101,0,mlbnPot.get()),
 __nsltmp102=nslj.src.math.NslElemMult.eval(__nsltmp102,stm.get(),llbn.get())))) /* rule 108 */;
	mlbn.set(NslSaturation.eval(mlbnPot,mlbn_kx1,mlbn_kx2,mlbn_ky1,mlbn_ky2)) /* rule 108 */;
	if (system.debug>=7) {
		System.out.println("debug: MLBN");
		System.out.println(mlbn);
	}
}
	/* nslInitTempModule inserted by NPP */
public void nslInitTempModule() {
	/* Instantiation statements generated by NslPreProcessor */
	/* temporary variables */
	__nsltmp101 = new float[1][1];
	__nsltmp102 = new float[1][1];
	__nsltmp103 = new float[1][1];
	/* end of automatic instantiation statements */
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempRun inserted by NPP */
public void nslInitTempRun() {
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	for (int i = 0; i < __nsltmp101.length; i++) {
		for (int j = 0; j < __nsltmp101[0].length; j++) {
			__nsltmp101[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp102.length; i++) {
		for (int j = 0; j < __nsltmp102[0].length; j++) {
			__nsltmp102[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp103.length; i++) {
		for (int j = 0; j < __nsltmp103[0].length; j++) {
			__nsltmp103[i][j] = 0;
		}
	}
	/* end of automatic intialisation statements */
}

	/* nslInitTempTrain inserted by NPP */
public void nslInitTempTrain() {
	/* Initialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* Declaration statements generated by NslPreProcessor */
	/* makeinst() declared variables */
	/* temporary variables */
	private  float[][] __nsltmp101;
	private  float[][] __nsltmp102;
	private  float[][] __nsltmp103;
	/* constructor and related methods */
	/* nsl declarations */
	int stdsz;

	 /*GENERIC CONSTRUCTOR:   */
	 public MLBN(String nslName, NslModule nslParent,int stdsz) {
		super(nslName, nslParent);
		this.stdsz = stdsz;
		initSys();
		makeInst(nslName, nslParent,stdsz);
	}
	public void makeInst(String nslName, NslModule nslParent,int stdsz){ 
	 stm=new NslDinFloat2 ("stm",this,stdsz,stdsz); //NSLDECLS 
	 llbn=new NslDinFloat2 ("llbn",this,stdsz,stdsz); //NSLDECLS 
	 mlbn=new NslDoutFloat2 ("mlbn",this,stdsz,stdsz); //NSLDECLS 
	 mlbnPot_tm=new NslFloat0 ("mlbnPot_tm",this); //NSLDECLS 
	 mlbn_kx1=new NslFloat0 ("mlbn_kx1",this); //NSLDECLS 
	 mlbn_kx2=new NslFloat0 ("mlbn_kx2",this); //NSLDECLS 
	 mlbn_ky1=new NslFloat0 ("mlbn_ky1",this); //NSLDECLS 
	 mlbn_ky2=new NslFloat0 ("mlbn_ky2",this); //NSLDECLS 
	 mlbnPot=new NslFloat2 ("mlbnPot",this,stdsz,stdsz); //NSLDECLS 
	}
	/* end of automatic declaration statements */
}
