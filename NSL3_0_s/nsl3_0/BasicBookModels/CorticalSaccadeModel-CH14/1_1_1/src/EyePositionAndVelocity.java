/* This file is generated by  NSL3.0 preprocessor*/

/* SCCS  %W% --- %G% -- %U% */

/*EyePositionAndVelocity
* Eye Position and Velocity 
* @see  EyePositionAndVelocity.nslm
* @version 98/6/18
* @author Dominey and Alexander
* This module represents the saccade motor neurons.
* From (Robinson, 1970) we have the following for firing rate, D, as a
* function of location (Theta) and velocity (d.Theta/d.t):
*  		D = k*Theta + r*d.Theta/d.t + c
* 		  = 2.75*Theta + 0.9* d.Theta/d.t + 154;
*  this simplified linear sytem for the mapping of oculomotor neuron firing
*  rates to location and velocity of eye will be used in our preliminary
*  model. 
*/
 import nslj.src.system.*; 
 import nslj.src.cmd.*; 
 import nslj.src.lang.*; 
 import nslj.src.math.*; 
 import nslj.src.display.*; 

 public class EyePositionAndVelocity extends NslModule /*()*/  {
// input ports
public NslDinFloat0 ltn ; /* ()*/
public NslDinFloat0 rtn ; /* ()*/
public NslDinFloat0 utn ; /* ()*/
public NslDinFloat0 dtn ; /* ()*/
public NslDinFloat0 lebn ; /* ()*/
public NslDinFloat0 rebn ; /* ()*/
public NslDinFloat0 uebn ; /* ()*/
public NslDinFloat0 debn ; /* ()*/
public NslDinFloat0 ltnChange ; /* ()*/
public NslDinFloat0 rtnChange ; /* ()*/
public NslDinFloat0 utnChange ; /* ()*/
public NslDinFloat0 dtnChange ; /* ()*/
// output ports
public NslDoutFloat0 horizontalVelocity ; /*()*/
public NslDoutFloat0 verticalVelocity ; /*()*/
public NslDoutFloat0 horizontalTheta ; /*()*/
public NslDoutFloat0 verticalTheta ; /*()*/


// parameters 
private NslFloat0 eyeH_k1 ; /* ()*/
private NslFloat0 eyeV_k1 ; /* ()*/
private NslFloat0 eyeH_k2 ; /* ()*/
private NslFloat0 eyeV_k2 ; /* ()*/
private NslFloat0 vv_k1 ; /* ()*/
private NslFloat0 vv_k2 ; /* ()*/
private NslFloat0 vv_k3 ; /* ()*/
private NslFloat0 hv_k1 ; /* ()*/
private NslFloat0 hv_k2 ; /* ()*/
private NslFloat0 hv_k3 ; /* ()*/
private NslFloat0 horizontalTheta_k1 ; /* ()*/
private NslFloat0 verticalTheta_k1 ; /*()*/
private NslFloat0 eyeVdown_k1 ; /*()*/
private NslFloat0 eyeHleft_k1 ; /*()*/
private NslFloat0 eyeVdown_k2 ; /*()*/
private NslFloat0 eyeHleft_k2 ; /*()*/

//vars
private NslFloat0 eyeV ; /*()*/
private NslFloat0 eyeH ; /*()*/
private NslFloat0 eyeVdown ; /*()*/
private NslFloat0 eyeHleft ; /*()*/


public  void initRun() {
       horizontalVelocity.set(0);;
       verticalVelocity.set(0);
       horizontalTheta.set(0);
       verticalTheta.set(0);
       eyeV.set(0);
       eyeH.set(0);
       eyeVdown.set(0);
       eyeHleft.set(0);

	eyeV_k1.set(154);
	eyeV_k2.set(0.3636364);
	eyeH_k1.set(154);
	eyeH_k2.set(0.3636364);
	vv_k1.set(0);
	vv_k2.set(17);
	vv_k3.set(17);
	hv_k1.set(0);
	hv_k2.set(17);
	hv_k3.set(17);
	horizontalTheta_k1.set(0.1);
	verticalTheta_k1.set(0.1);
	eyeVdown_k1.set(154);
	eyeVdown_k2.set(0.3636364);
	eyeHleft_k1.set(154);
	eyeHleft_k2.set(0.3636364);
}
	
public  void simRun() {
	eyeH.set((
 nslj.src.math.NslElemMult.eval(eyeH_k2.get(),rtn.get()))-(56));
	eyeV.set((
 nslj.src.math.NslElemMult.eval(eyeV_k2.get(),utn.get()))-(56)); 
	verticalVelocity.set((((
 nslj.src.math.NslElemMult.eval(vv_k1.get(),uebn.get()))-(
 nslj.src.math.NslElemMult.eval(vv_k1.get(),debn.get())))+(
 nslj.src.math.NslElemMult.eval(vv_k2.get(),utnChange.get())))-(
 nslj.src.math.NslElemMult.eval(vv_k3.get(),dtnChange.get())));
	horizontalVelocity.set((((
 nslj.src.math.NslElemMult.eval(hv_k1.get(),rebn.get()))-(
 nslj.src.math.NslElemMult.eval(hv_k1.get(),lebn.get())))+(
 nslj.src.math.NslElemMult.eval(hv_k2.get(),rtnChange.get())))-(
 nslj.src.math.NslElemMult.eval(hv_k3.get(),ltnChange.get())));
	horizontalTheta.set(
 nslj.src.math.NslElemMult.eval(horizontalTheta_k1.get(),eyeH.get()));
	verticalTheta.set(
 nslj.src.math.NslElemMult.eval(verticalTheta_k1.get(),eyeV.get()));

	//NOTE: eyeHdown and eyeVleft represents gaze angle, and is not used in the
	//model, but only as an indicator of eye position for experimenter
	eyeVdown.set((
 nslj.src.math.NslElemMult.eval(eyeVdown_k2.get(),dtn.get()))-(56));
	eyeHleft.set((
 nslj.src.math.NslElemMult.eval(eyeHleft_k2.get(),ltn.get()))-(56));

	if (system.debug>=12) {
		System.out.println(("EyePos: simRun: horizontalVelocity:")+(horizontalVelocity));
		System.out.println(("EyePos: simRun: verticalVelocity:")+(verticalVelocity));
		System.out.println(("EyePos: simRun: horizontalTheta:")+(horizontalTheta));
		System.out.println(("EyePos: simRun: verticalTheta:")+(verticalTheta));
		
	}


}

	/* nslInitTempModule inserted by NPP */
public void nslInitTempModule() {
	/* Instantiation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic instantiation statements */
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempRun inserted by NPP */
public void nslInitTempRun() {
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempTrain inserted by NPP */
public void nslInitTempTrain() {
	/* Initialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* Declaration statements generated by NslPreProcessor */
	/* makeinst() declared variables */
	/* temporary variables */
	/* constructor and related methods */
	/* nsl declarations */

	 /*GENERIC CONSTRUCTOR:   */
	 public EyePositionAndVelocity(String nslName, NslModule nslParent) {
		super(nslName, nslParent);
		initSys();
		makeInst(nslName, nslParent);
	}
	public void makeInst(String nslName, NslModule nslParent){ 
	 ltn=new NslDinFloat0 ("ltn",this); //NSLDECLS 
	 rtn=new NslDinFloat0 ("rtn",this); //NSLDECLS 
	 utn=new NslDinFloat0 ("utn",this); //NSLDECLS 
	 dtn=new NslDinFloat0 ("dtn",this); //NSLDECLS 
	 lebn=new NslDinFloat0 ("lebn",this); //NSLDECLS 
	 rebn=new NslDinFloat0 ("rebn",this); //NSLDECLS 
	 uebn=new NslDinFloat0 ("uebn",this); //NSLDECLS 
	 debn=new NslDinFloat0 ("debn",this); //NSLDECLS 
	 ltnChange=new NslDinFloat0 ("ltnChange",this); //NSLDECLS 
	 rtnChange=new NslDinFloat0 ("rtnChange",this); //NSLDECLS 
	 utnChange=new NslDinFloat0 ("utnChange",this); //NSLDECLS 
	 dtnChange=new NslDinFloat0 ("dtnChange",this); //NSLDECLS 
	 horizontalVelocity=new NslDoutFloat0 ("horizontalVelocity",this); //NSLDECLS 
	 verticalVelocity=new NslDoutFloat0 ("verticalVelocity",this); //NSLDECLS 
	 horizontalTheta=new NslDoutFloat0 ("horizontalTheta",this); //NSLDECLS 
	 verticalTheta=new NslDoutFloat0 ("verticalTheta",this); //NSLDECLS 
	 eyeH_k1=new NslFloat0 ("eyeH_k1",this); //NSLDECLS 
	 eyeV_k1=new NslFloat0 ("eyeV_k1",this); //NSLDECLS 
	 eyeH_k2=new NslFloat0 ("eyeH_k2",this); //NSLDECLS 
	 eyeV_k2=new NslFloat0 ("eyeV_k2",this); //NSLDECLS 
	 vv_k1=new NslFloat0 ("vv_k1",this); //NSLDECLS 
	 vv_k2=new NslFloat0 ("vv_k2",this); //NSLDECLS 
	 vv_k3=new NslFloat0 ("vv_k3",this); //NSLDECLS 
	 hv_k1=new NslFloat0 ("hv_k1",this); //NSLDECLS 
	 hv_k2=new NslFloat0 ("hv_k2",this); //NSLDECLS 
	 hv_k3=new NslFloat0 ("hv_k3",this); //NSLDECLS 
	 horizontalTheta_k1=new NslFloat0 ("horizontalTheta_k1",this); //NSLDECLS 
	 verticalTheta_k1=new NslFloat0 ("verticalTheta_k1",this); //NSLDECLS 
	 eyeVdown_k1=new NslFloat0 ("eyeVdown_k1",this); //NSLDECLS 
	 eyeHleft_k1=new NslFloat0 ("eyeHleft_k1",this); //NSLDECLS 
	 eyeVdown_k2=new NslFloat0 ("eyeVdown_k2",this); //NSLDECLS 
	 eyeHleft_k2=new NslFloat0 ("eyeHleft_k2",this); //NSLDECLS 
	 eyeV=new NslFloat0 ("eyeV",this); //NSLDECLS 
	 eyeH=new NslFloat0 ("eyeH",this); //NSLDECLS 
	 eyeVdown=new NslFloat0 ("eyeVdown",this); //NSLDECLS 
	 eyeHleft=new NslFloat0 ("eyeHleft",this); //NSLDECLS 
	}
	/* end of automatic declaration statements */
}
