/* This file is generated by  NSL3.0 preprocessor*/

/* SCCS  %W% --- %G% -- %U% */

/*FON
* Turns on the correct Fovial Element in the Lateral Inter Parietal
* of the Posterior Parietal Cortex
* @see FON.nslm
* @version 98/6/18
* @author Dominey and Alexander
*
*/
 import nslj.src.system.*; 
 import nslj.src.cmd.*; 
 import nslj.src.lang.*; 
 import nslj.src.math.*; 
 import nslj.src.display.*; 

 public class FON extends NslModule /*(int stdsz)*/  {

// port inputs
public NslDinFloat2 posteriorParietal ; /* (stdsz,stdsz)*/
// port outputs
public NslDoutFloat2 fon ; /*(stdsz,stdsz)*/  
public NslDoutFloat2 fovElem ; /*(stdsz,stdsz)*/ 
public NslDoutFloat0 fonCenter ; /*()*/  

// parameters 
private NslFloat0 fonPot_k1 ; /*()*/
private NslFloat0 fon_x1 ; /*()*/
private NslFloat0 fon_y1 ; /*()*/
private NslFloat0 fon_y2 ; /*()*/

//vars
private NslFloat2 fonPot ; /*(stdsz,stdsz)*/
private NslFloat0 fovElemCenter ; /*()*/
//private NslFloat0 fonCenter();
private  int center;


public  void initModule() {	
}

public  void initRun() {
       center =(int) stdsz/2;
       fon.set(0);
       fovElem.set(0);
       fonPot.set(0);
       fovElemCenter.set(0);
       fonCenter.set(0);

	fonPot_k1.set(1);
	fon_x1.set(5);
	fon_y1.set(0);
	fon_y2.set(90);
}
public  void simRun() {
	fonPot.set(
 nslj.src.math.NslElemMult.eval(fonPot_k1.get(),(posteriorParietal).get(center,center))); 

	fon.set(NslStep.eval(fonPot,fon_x1,fon_y1,fon_y2)) /* rule 108 */;

	(fovElem).set(center,center,(posteriorParietal).get(center,center)); 

	fonCenter.set((fon).get(center,center));
	fovElemCenter.set((fovElem).get(center,center));

	if (system.debug>=20) {
		System.out.println("FON:simRun: fonCenter");
		System.out.println(fonCenter);
		System.out.println("FON:simRun: fovElemCenter");
		System.out.println(fovElemCenter);
	}
}

	/* nslInitTempModule inserted by NPP */
public void nslInitTempModule() {
	/* Instantiation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic instantiation statements */
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempRun inserted by NPP */
public void nslInitTempRun() {
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempTrain inserted by NPP */
public void nslInitTempTrain() {
	/* Initialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* Declaration statements generated by NslPreProcessor */
	/* makeinst() declared variables */
	/* temporary variables */
	/* constructor and related methods */
	/* nsl declarations */
	int stdsz;

	 /*GENERIC CONSTRUCTOR:   */
	 public FON(String nslName, NslModule nslParent,int stdsz) {
		super(nslName, nslParent);
		this.stdsz = stdsz;
		initSys();
		makeInst(nslName, nslParent,stdsz);
	}
	public void makeInst(String nslName, NslModule nslParent,int stdsz){ 
	 posteriorParietal=new NslDinFloat2 ("posteriorParietal",this,stdsz,stdsz); //NSLDECLS 
	 fon=new NslDoutFloat2 ("fon",this,stdsz,stdsz); //NSLDECLS 
	 fovElem=new NslDoutFloat2 ("fovElem",this,stdsz,stdsz); //NSLDECLS 
	 fonCenter=new NslDoutFloat0 ("fonCenter",this); //NSLDECLS 
	 fonPot_k1=new NslFloat0 ("fonPot_k1",this); //NSLDECLS 
	 fon_x1=new NslFloat0 ("fon_x1",this); //NSLDECLS 
	 fon_y1=new NslFloat0 ("fon_y1",this); //NSLDECLS 
	 fon_y2=new NslFloat0 ("fon_y2",this); //NSLDECLS 
	 fonPot=new NslFloat2 ("fonPot",this,stdsz,stdsz); //NSLDECLS 
	 fovElemCenter=new NslFloat0 ("fovElemCenter",this); //NSLDECLS 
	}
	/* end of automatic declaration statements */
} //end class
