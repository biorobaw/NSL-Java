/* This file is generated by  NSL3.0 preprocessor*/

/* SCCS %W% -- %G% -- %U% */

/*Retina
* Retinal calculations
* @see  Retina.nslm
* @version 98/6/18
* @author Dominey and Alexander
* This module takes the gated input from the visualInput.
* The input is gated by the signals coming from the brain stem.
*/

 import nslj.src.system.*; 
 import nslj.src.cmd.*; 
 import nslj.src.lang.*; 
 import nslj.src.math.*; 
 import nslj.src.display.*; 

 public class Retina extends NslModule /*(int stdsz,int bigsz)*/ {

// ports
public NslDinFloat2 saccademask ; /* (stdsz,stdsz)*/
public NslDinFloat2 visualinput ; /*(bigsz,bigsz)*/
public NslDinFloat0 horizontalTheta ; /*()*/
public NslDinFloat0 verticalTheta ; /*()*/
public NslDoutFloat2 retina ; /*(stdsz,stdsz)*/


// parameters 
private NslFloat0 retinaPot_tm ; /*()*/

/// vars
public NslFloat2 retinaPot ; /* (stdsz,stdsz)*/
public NslFloat2 retinaPot1 ; /* (stdsz,stdsz)*/


public  void initRun() {
       retina.set(0);
       retinaPot.set(0);
       retinaPot1.set(0);
	retinaPot_tm.set(.006);
}
public  void simRun()
{
	retinaPot1.set(DomineyLib.eyeMove(visualinput,horizontalTheta,verticalTheta,stdsz,bigsz)) /* rule 108 */;
	retinaPot.set(system.nsldiff.eval(retinaPot,retinaPot_tm,
 __nsltmp102=nslj.src.math.NslAdd.eval(__nsltmp102,
 __nsltmp101=nslj.src.math.NslSub.eval(__nsltmp101,0,retinaPot.get()),retinaPot1.get()))) /* rule 108 */;
	retina.set(
 __nsltmp103=nslj.src.math.NslElemMult.eval(__nsltmp103,saccademask.get(),retinaPot.get()));

	if (system.debug>=15) {
	  System.out.println("debug: Retina:retinaPot1 ");
	  System.out.println(retinaPot1);
	  System.out.println("debug: Retina:retinaPot ");
	  System.out.println(retinaPot);
	  System.out.println("debug: Retina:retina ");
	  System.out.println(retina);

	}
}
	/* nslInitTempModule inserted by NPP */
public void nslInitTempModule() {
	/* Instantiation statements generated by NslPreProcessor */
	/* temporary variables */
	__nsltmp101 = new float[1][1];
	__nsltmp102 = new float[1][1];
	__nsltmp103 = new float[1][1];
	/* end of automatic instantiation statements */
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempRun inserted by NPP */
public void nslInitTempRun() {
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	for (int i = 0; i < __nsltmp101.length; i++) {
		for (int j = 0; j < __nsltmp101[0].length; j++) {
			__nsltmp101[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp102.length; i++) {
		for (int j = 0; j < __nsltmp102[0].length; j++) {
			__nsltmp102[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp103.length; i++) {
		for (int j = 0; j < __nsltmp103[0].length; j++) {
			__nsltmp103[i][j] = 0;
		}
	}
	/* end of automatic intialisation statements */
}

	/* nslInitTempTrain inserted by NPP */
public void nslInitTempTrain() {
	/* Initialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* Declaration statements generated by NslPreProcessor */
	/* makeinst() declared variables */
	/* temporary variables */
	private  float[][] __nsltmp101;
	private  float[][] __nsltmp102;
	private  float[][] __nsltmp103;
	/* constructor and related methods */
	/* nsl declarations */
	int stdsz;
	int bigsz;

	 /*GENERIC CONSTRUCTOR:   */
	 public Retina(String nslName, NslModule nslParent,int stdsz, int bigsz) {
		super(nslName, nslParent);
		this.stdsz = stdsz;
		this.bigsz = bigsz;
		initSys();
		makeInst(nslName, nslParent,stdsz, bigsz);
	}
	public void makeInst(String nslName, NslModule nslParent,int stdsz,int bigsz){ 
	 saccademask=new NslDinFloat2 ("saccademask",this,stdsz,stdsz); //NSLDECLS 
	 visualinput=new NslDinFloat2 ("visualinput",this,bigsz,bigsz); //NSLDECLS 
	 horizontalTheta=new NslDinFloat0 ("horizontalTheta",this); //NSLDECLS 
	 verticalTheta=new NslDinFloat0 ("verticalTheta",this); //NSLDECLS 
	 retina=new NslDoutFloat2 ("retina",this,stdsz,stdsz); //NSLDECLS 
	 retinaPot_tm=new NslFloat0 ("retinaPot_tm",this); //NSLDECLS 
	 retinaPot=new NslFloat2 ("retinaPot",this,stdsz,stdsz); //NSLDECLS 
	 retinaPot1=new NslFloat2 ("retinaPot1",this,stdsz,stdsz); //NSLDECLS 
	}
	/* end of automatic declaration statements */
}
