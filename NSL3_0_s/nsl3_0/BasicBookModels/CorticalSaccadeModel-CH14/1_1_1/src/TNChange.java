/* This file is generated by  NSL3.0 preprocessor*/

/* SCCS  %W% --- %G% -- %U% */

/** TNChange
* Tonic Neurons: calculation for change in theta or eye position
* @see TNChange.nslm
* @version 98/6/18
* @author Dominey: coder Alexander
* Change in position for QV Shift
*/
 import nslj.src.system.*; 
 import nslj.src.cmd.*; 
 import nslj.src.lang.*; 
 import nslj.src.math.*; 
 import nslj.src.display.*; 

 public class TNChange extends NslModule /*()*/  {

// port inputs
public NslDinFloat0 fefgate ; /*()*/
public NslDinFloat0 ebn ; /* ()*/
public NslDinFloat0 opposite_ebn ; /* ()*/
public NslDinFloat0 tnDelta ; /* ()*/
// port outputs
public NslDoutFloat0 tn ; /* ()*/
public NslDoutFloat0 tnChange ; /* ()*/
// parameters 
private NslFloat0 tn_k1 ; /*()*/
private NslFloat0 tnDelay1_tm ; /*()*/
//vars
private NslFloat0 tnDelay1 ; /* ()*/


public  void initRun() {
	if (system.debug>=13) {
		System.out.println("debug:TNChange:initRun");
	}

       tn.set(0);
       tnChange.set(0);
	tnDelay1.set(154); // use to be TNDELAY
	tn.set(154);
	tnChange.set(0);

	tn_k1.set(.01527778);
	tnDelay1_tm.set(.006);
}
public  void simRun() {
	tnDelay1.set(system.nsldiff.eval(tnDelay1,tnDelay1_tm,
 nslj.src.math.NslAdd.eval(nslj.src.math.NslSub.eval(0,tnDelay1),tn.get()))) /* rule 108 */;
	//On each timestep,the tonic component uppdated by 2.75*(change in Theta).
	// Change in Theta is angular velocity * time =
	//			   opposite_ebn*(1/R)  * (simuation time step)
	tn.set(((
 nslj.src.math.NslAdd.eval(tn.get(),
 nslj.src.math.NslElemMult.eval(tn_k1.get(),ebn.get())))-(
 nslj.src.math.NslElemMult.eval(tn_k1.get(),opposite_ebn.get())))-(
 nslj.src.math.NslElemMult.eval(fefgate.get(),tnDelta.get())));
	tnChange.set(
 nslj.src.math.NslSub.eval(tn.get(),tnDelay1.get()));

	if (system.debug>=13) {
		System.out.println(("TNChange:tn: ")+(tn));
		System.out.println(("TNChange:tnChange: ")+(tnChange));
	}

}
	/* nslInitTempModule inserted by NPP */
public void nslInitTempModule() {
	/* Instantiation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic instantiation statements */
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempRun inserted by NPP */
public void nslInitTempRun() {
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempTrain inserted by NPP */
public void nslInitTempTrain() {
	/* Initialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* Declaration statements generated by NslPreProcessor */
	/* makeinst() declared variables */
	/* temporary variables */
	/* constructor and related methods */
	/* nsl declarations */

	 /*GENERIC CONSTRUCTOR:   */
	 public TNChange(String nslName, NslModule nslParent) {
		super(nslName, nslParent);
		initSys();
		makeInst(nslName, nslParent);
	}
	public void makeInst(String nslName, NslModule nslParent){ 
	 fefgate=new NslDinFloat0 ("fefgate",this); //NSLDECLS 
	 ebn=new NslDinFloat0 ("ebn",this); //NSLDECLS 
	 opposite_ebn=new NslDinFloat0 ("opposite_ebn",this); //NSLDECLS 
	 tnDelta=new NslDinFloat0 ("tnDelta",this); //NSLDECLS 
	 tn=new NslDoutFloat0 ("tn",this); //NSLDECLS 
	 tnChange=new NslDoutFloat0 ("tnChange",this); //NSLDECLS 
	 tn_k1=new NslFloat0 ("tn_k1",this); //NSLDECLS 
	 tnDelay1_tm=new NslFloat0 ("tnDelay1_tm",this); //NSLDECLS 
	 tnDelay1=new NslFloat0 ("tnDelay1",this); //NSLDECLS 
	}
	/* end of automatic declaration statements */
}
