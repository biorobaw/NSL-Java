/* This file is generated by  NSL3.0 preprocessor*/

/* SCCS  %W% -- %G% -- %U% */

/*SNR
* Substantia Nigra
* @see SNR.nslm
* @version 98/6/18
* @author Dominey and Alexander
*
*/
 import nslj.src.system.*; 
 import nslj.src.cmd.*; 
 import nslj.src.lang.*; 
 import nslj.src.math.*; 
 import nslj.src.display.*; 

 public class SNR extends NslModule /*(int stdsz)*/  {

// port inputs
public NslDinFloat2 cdmem ; /*(stdsz,stdsz)*/
public NslDinFloat2 cdsac ; /*(stdsz,stdsz)*/
// port outputs 
public NslDoutFloat2 snrmem ; /*(stdsz,stdsz)*/
public NslDoutFloat2 snrsac ; /*(stdsz,stdsz)*/
// parameters 
private NslFloat0 snrmemPot_tm ; /*()*/
private NslFloat0 snrsacPot_tm ; /*()*/
private NslFloat0 snrmemPot_k1 ; /*()*/
private NslFloat0 snrsacPot_k1 ; /*()*/
private NslFloat0 snrmem_x1 ; /*()*/
private NslFloat0 snrmem_x2 ; /*()*/
private NslFloat0 snrmem_y1 ; /*()*/
private NslFloat0 snrmem_y2 ; /*()*/
private NslFloat0 snrsac_x1 ; /*()*/
private NslFloat0 snrsac_x2 ; /*()*/
private NslFloat0 snrsac_y1 ; /*()*/
private NslFloat0 snrsac_y2 ; /*()*/

//vars
private NslFloat2 snrmemPot ; /*(stdsz,stdsz)*/
private NslFloat2 snrsacPot ; /*(stdsz,stdsz)*/



public  void initRun() {
	snrmem.set(100);
	snrsac.set(100);
        snrmemPot.set(0);
        snrsacPot.set(0);

	snrmemPot_tm.set(.04);
	snrsacPot_tm.set(.02);
	snrmemPot_k1.set(1.5);
	snrsacPot_k1.set(1);	
	snrmem_x1.set(0);
	snrmem_x2.set(50);
	snrmem_y1.set(100);
	snrmem_y2.set(0);
	snrsac_x1.set(0);
	snrsac_x2.set(50);
	snrsac_y1.set(100);
	snrsac_y2.set(0);	
}
public  void simRun() {
	snrsacPot.set(system.nsldiff.eval(snrsacPot,snrsacPot_tm,
 __nsltmp103=nslj.src.math.NslAdd.eval(__nsltmp103,
 __nsltmp101=nslj.src.math.NslSub.eval(__nsltmp101,0,snrsacPot.get()),
 __nsltmp102=nslj.src.math.NslElemMult.eval(__nsltmp102,snrsacPot_k1.get(),cdsac.get())))) /* rule 108 */;
	snrmemPot.set(system.nsldiff.eval(snrmemPot,snrmemPot_tm,
 __nsltmp106=nslj.src.math.NslAdd.eval(__nsltmp106,
 __nsltmp104=nslj.src.math.NslSub.eval(__nsltmp104,0,snrmemPot.get()),
 __nsltmp105=nslj.src.math.NslElemMult.eval(__nsltmp105,snrmemPot_k1.get(),cdmem.get())))) /* rule 108 */;
	snrsac.set(NslSigmoid.eval(snrsacPot,snrsac_x1,snrsac_x2,snrsac_y1,snrsac_y2)) /* rule 108 */;
	snrmem.set(NslSigmoid.eval(snrmemPot,snrmem_x1,snrmem_x2,snrmem_y1,snrmem_y2)) /* rule 108 */;

	if (system.debug>=23) {
		System.out.println("SNR: snrsac");
		System.out.println(snrsac);
		System.out.println("SNR: snrmem");
		System.out.println(snrmem);
	}
}

	/* nslInitTempModule inserted by NPP */
public void nslInitTempModule() {
	/* Instantiation statements generated by NslPreProcessor */
	/* temporary variables */
	__nsltmp101 = new float[1][1];
	__nsltmp102 = new float[1][1];
	__nsltmp103 = new float[1][1];
	__nsltmp104 = new float[1][1];
	__nsltmp105 = new float[1][1];
	__nsltmp106 = new float[1][1];
	/* end of automatic instantiation statements */
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempRun inserted by NPP */
public void nslInitTempRun() {
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	for (int i = 0; i < __nsltmp101.length; i++) {
		for (int j = 0; j < __nsltmp101[0].length; j++) {
			__nsltmp101[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp102.length; i++) {
		for (int j = 0; j < __nsltmp102[0].length; j++) {
			__nsltmp102[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp103.length; i++) {
		for (int j = 0; j < __nsltmp103[0].length; j++) {
			__nsltmp103[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp104.length; i++) {
		for (int j = 0; j < __nsltmp104[0].length; j++) {
			__nsltmp104[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp105.length; i++) {
		for (int j = 0; j < __nsltmp105[0].length; j++) {
			__nsltmp105[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp106.length; i++) {
		for (int j = 0; j < __nsltmp106[0].length; j++) {
			__nsltmp106[i][j] = 0;
		}
	}
	/* end of automatic intialisation statements */
}

	/* nslInitTempTrain inserted by NPP */
public void nslInitTempTrain() {
	/* Initialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* Declaration statements generated by NslPreProcessor */
	/* makeinst() declared variables */
	/* temporary variables */
	private  float[][] __nsltmp101;
	private  float[][] __nsltmp102;
	private  float[][] __nsltmp103;
	private  float[][] __nsltmp104;
	private  float[][] __nsltmp105;
	private  float[][] __nsltmp106;
	/* constructor and related methods */
	/* nsl declarations */
	int stdsz;

	 /*GENERIC CONSTRUCTOR:   */
	 public SNR(String nslName, NslModule nslParent,int stdsz) {
		super(nslName, nslParent);
		this.stdsz = stdsz;
		initSys();
		makeInst(nslName, nslParent,stdsz);
	}
	public void makeInst(String nslName, NslModule nslParent,int stdsz){ 
	 cdmem=new NslDinFloat2 ("cdmem",this,stdsz,stdsz); //NSLDECLS 
	 cdsac=new NslDinFloat2 ("cdsac",this,stdsz,stdsz); //NSLDECLS 
	 snrmem=new NslDoutFloat2 ("snrmem",this,stdsz,stdsz); //NSLDECLS 
	 snrsac=new NslDoutFloat2 ("snrsac",this,stdsz,stdsz); //NSLDECLS 
	 snrmemPot_tm=new NslFloat0 ("snrmemPot_tm",this); //NSLDECLS 
	 snrsacPot_tm=new NslFloat0 ("snrsacPot_tm",this); //NSLDECLS 
	 snrmemPot_k1=new NslFloat0 ("snrmemPot_k1",this); //NSLDECLS 
	 snrsacPot_k1=new NslFloat0 ("snrsacPot_k1",this); //NSLDECLS 
	 snrmem_x1=new NslFloat0 ("snrmem_x1",this); //NSLDECLS 
	 snrmem_x2=new NslFloat0 ("snrmem_x2",this); //NSLDECLS 
	 snrmem_y1=new NslFloat0 ("snrmem_y1",this); //NSLDECLS 
	 snrmem_y2=new NslFloat0 ("snrmem_y2",this); //NSLDECLS 
	 snrsac_x1=new NslFloat0 ("snrsac_x1",this); //NSLDECLS 
	 snrsac_x2=new NslFloat0 ("snrsac_x2",this); //NSLDECLS 
	 snrsac_y1=new NslFloat0 ("snrsac_y1",this); //NSLDECLS 
	 snrsac_y2=new NslFloat0 ("snrsac_y2",this); //NSLDECLS 
	 snrmemPot=new NslFloat2 ("snrmemPot",this,stdsz,stdsz); //NSLDECLS 
	 snrsacPot=new NslFloat2 ("snrsacPot",this,stdsz,stdsz); //NSLDECLS 
	}
	/* end of automatic declaration statements */
}  // end class
