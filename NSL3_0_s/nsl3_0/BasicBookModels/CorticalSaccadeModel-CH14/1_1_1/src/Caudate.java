/* This file is generated by  NSL3.0 preprocessor*/

/* SCCS  %W% --- %G% -- %U% */

/*Caudate
* Caudate
* @see Caudate.nslm
* @version 98/6/18
* @author Dominey and Alexander
*
*/
 import nslj.src.system.*; 
 import nslj.src.cmd.*; 
 import nslj.src.lang.*; 
 import nslj.src.math.*; 
 import nslj.src.display.*; 

 public class Caudate extends NslModule /*(int stdsz)*/  {
// port inputs
public NslDinFloat2 fefmem ; /*(stdsz,stdsz)*/
public NslDinFloat2 fefsac ; /*(stdsz,stdsz)*/
// port outputs
public NslDoutFloat2 cdmem ; /*(stdsz,stdsz)*/
public NslDoutFloat2 cdsac ; /*(stdsz,stdsz)*/
// parameters 
private NslFloat0 cdmemPot_tm ; /*()*/
private NslFloat0 cdsacPot_tm ; /*()*/
private NslFloat0 cdmemPot_k1 ; /*()*/
private NslFloat0 cdsacPot_k1 ; /*()*/
private NslFloat0 cdmem_x1 ; /*()*/
private NslFloat0 cdmem_x2 ; /*()*/
private NslFloat0 cdmem_y1 ; /*()*/
private NslFloat0 cdmem_y2 ; /*()*/
private NslFloat0 cdsac_x1 ; /*()*/
private NslFloat0 cdsac_x2 ; /*()*/
private NslFloat0 cdsac_y1 ; /*()*/
private NslFloat0 cdsac_y2 ; /*()*/

//vars
private NslFloat2 cdmemPot ; /*(stdsz,stdsz)*/
private NslFloat2 cdsacPot ; /*(stdsz,stdsz)*/


public  void initRun() {
	cdmem.set(0);
	cdsac.set(0);
	cdmemPot_tm.set(.01);
	cdsacPot_tm.set(.008);
	cdmemPot_k1.set(1);
	cdsacPot_k1.set(1);	
	cdmem_x1.set(50);
	cdmem_x2.set(90);
	cdmem_y1.set(0);
	cdmem_y2.set(60);
	cdsac_x1.set(0);
	cdsac_x2.set(50);
	cdsac_y1.set(0);
	cdsac_y2.set(60);	
}
public  void simRun() {
	cdmemPot.set(system.nsldiff.eval(cdmemPot,cdmemPot_tm,
 __nsltmp103=nslj.src.math.NslAdd.eval(__nsltmp103,
 __nsltmp101=nslj.src.math.NslSub.eval(__nsltmp101,0,cdmemPot.get()),
 __nsltmp102=nslj.src.math.NslElemMult.eval(__nsltmp102,cdmemPot_k1.get(),fefmem.get())))) /* rule 108 */;
	cdsacPot.set(system.nsldiff.eval(cdsacPot,cdsacPot_tm,
 __nsltmp106=nslj.src.math.NslAdd.eval(__nsltmp106,
 __nsltmp104=nslj.src.math.NslSub.eval(__nsltmp104,0,cdsacPot.get()),
 __nsltmp105=nslj.src.math.NslElemMult.eval(__nsltmp105,cdsacPot_k1.get(),fefsac.get())))) /* rule 108 */;
	cdmem.set(NslSigmoid.eval(cdmemPot,cdmem_x1,cdmem_x2,cdmem_y1,cdmem_y2)) /* rule 108 */;
	cdsac.set(NslSigmoid.eval(cdsacPot,cdsac_x1,cdsac_x2,cdsac_y1,cdsac_y2)) /* rule 108 */;

	if (system.debug>22) {
		System.out.println("Caudate: cdmem");
		System.out.println(cdmem);
		System.out.println("Caudate: cdsac");
		System.out.println(cdsac);

	}
}


	/* nslInitTempModule inserted by NPP */
public void nslInitTempModule() {
	/* Instantiation statements generated by NslPreProcessor */
	/* temporary variables */
	__nsltmp101 = new float[1][1];
	__nsltmp102 = new float[1][1];
	__nsltmp103 = new float[1][1];
	__nsltmp104 = new float[1][1];
	__nsltmp105 = new float[1][1];
	__nsltmp106 = new float[1][1];
	/* end of automatic instantiation statements */
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* nslInitTempRun inserted by NPP */
public void nslInitTempRun() {
	/* Intialisation statements generated by NslPreProcessor */
	/* temporary variables */
	for (int i = 0; i < __nsltmp101.length; i++) {
		for (int j = 0; j < __nsltmp101[0].length; j++) {
			__nsltmp101[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp102.length; i++) {
		for (int j = 0; j < __nsltmp102[0].length; j++) {
			__nsltmp102[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp103.length; i++) {
		for (int j = 0; j < __nsltmp103[0].length; j++) {
			__nsltmp103[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp104.length; i++) {
		for (int j = 0; j < __nsltmp104[0].length; j++) {
			__nsltmp104[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp105.length; i++) {
		for (int j = 0; j < __nsltmp105[0].length; j++) {
			__nsltmp105[i][j] = 0;
		}
	}
	for (int i = 0; i < __nsltmp106.length; i++) {
		for (int j = 0; j < __nsltmp106[0].length; j++) {
			__nsltmp106[i][j] = 0;
		}
	}
	/* end of automatic intialisation statements */
}

	/* nslInitTempTrain inserted by NPP */
public void nslInitTempTrain() {
	/* Initialisation statements generated by NslPreProcessor */
	/* temporary variables */
	/* end of automatic intialisation statements */
}

	/* Declaration statements generated by NslPreProcessor */
	/* makeinst() declared variables */
	/* temporary variables */
	private  float[][] __nsltmp101;
	private  float[][] __nsltmp102;
	private  float[][] __nsltmp103;
	private  float[][] __nsltmp104;
	private  float[][] __nsltmp105;
	private  float[][] __nsltmp106;
	/* constructor and related methods */
	/* nsl declarations */
	int stdsz;

	 /*GENERIC CONSTRUCTOR:   */
	 public Caudate(String nslName, NslModule nslParent,int stdsz) {
		super(nslName, nslParent);
		this.stdsz = stdsz;
		initSys();
		makeInst(nslName, nslParent,stdsz);
	}
	public void makeInst(String nslName, NslModule nslParent,int stdsz){ 
	 fefmem=new NslDinFloat2 ("fefmem",this,stdsz,stdsz); //NSLDECLS 
	 fefsac=new NslDinFloat2 ("fefsac",this,stdsz,stdsz); //NSLDECLS 
	 cdmem=new NslDoutFloat2 ("cdmem",this,stdsz,stdsz); //NSLDECLS 
	 cdsac=new NslDoutFloat2 ("cdsac",this,stdsz,stdsz); //NSLDECLS 
	 cdmemPot_tm=new NslFloat0 ("cdmemPot_tm",this); //NSLDECLS 
	 cdsacPot_tm=new NslFloat0 ("cdsacPot_tm",this); //NSLDECLS 
	 cdmemPot_k1=new NslFloat0 ("cdmemPot_k1",this); //NSLDECLS 
	 cdsacPot_k1=new NslFloat0 ("cdsacPot_k1",this); //NSLDECLS 
	 cdmem_x1=new NslFloat0 ("cdmem_x1",this); //NSLDECLS 
	 cdmem_x2=new NslFloat0 ("cdmem_x2",this); //NSLDECLS 
	 cdmem_y1=new NslFloat0 ("cdmem_y1",this); //NSLDECLS 
	 cdmem_y2=new NslFloat0 ("cdmem_y2",this); //NSLDECLS 
	 cdsac_x1=new NslFloat0 ("cdsac_x1",this); //NSLDECLS 
	 cdsac_x2=new NslFloat0 ("cdsac_x2",this); //NSLDECLS 
	 cdsac_y1=new NslFloat0 ("cdsac_y1",this); //NSLDECLS 
	 cdsac_y2=new NslFloat0 ("cdsac_y2",this); //NSLDECLS 
	 cdmemPot=new NslFloat2 ("cdmemPot",this,stdsz,stdsz); //NSLDECLS 
	 cdsacPot=new NslFloat2 ("cdsacPot",this,stdsz,stdsz); //NSLDECLS 
	}
	/* end of automatic declaration statements */
}  //end class
